{
  "contractName": "COO",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x01ffc9a7"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x06fdde03"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x081812fc"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x095ea7b3"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x18160ddd"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x23b872dd"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x2f745c59"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x42842e0e"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x4f6ccce7"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x6352211e"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x70a08231"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x715018a6"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x8da5cb5b"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x8f32d59b"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x95d89b41"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xa22cb465"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xb88d4fde"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xc87b56dd"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xe985e9c5"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xf2fde38b"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor",
      "signature": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event",
      "signature": "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event",
      "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event",
      "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event",
      "signature": "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "name": "assetId",
              "type": "uint256"
            },
            {
              "name": "name",
              "type": "string"
            },
            {
              "name": "label",
              "type": "string"
            },
            {
              "name": "price",
              "type": "uint256"
            },
            {
              "name": "timestamp",
              "type": "uint256"
            },
            {
              "name": "factomEntryHash",
              "type": "string"
            },
            {
              "name": "anotherEncryptionKey",
              "type": "string"
            }
          ],
          "name": "newCertificate",
          "type": "tuple"
        }
      ],
      "name": "createCertificate",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x1c268fdf"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "certificateId",
          "type": "uint256"
        },
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "label",
          "type": "string"
        },
        {
          "name": "price",
          "type": "uint256"
        },
        {
          "name": "factomEntryHash",
          "type": "string"
        },
        {
          "name": "anotherEncryptionKey",
          "type": "string"
        }
      ],
      "name": "updateCertificate",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xc89d2b17"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "certificateId",
          "type": "uint256"
        }
      ],
      "name": "getCertificate",
      "outputs": [
        {
          "components": [
            {
              "name": "assetId",
              "type": "uint256"
            },
            {
              "name": "name",
              "type": "string"
            },
            {
              "name": "label",
              "type": "string"
            },
            {
              "name": "price",
              "type": "uint256"
            },
            {
              "name": "timestamp",
              "type": "uint256"
            },
            {
              "name": "factomEntryHash",
              "type": "string"
            },
            {
              "name": "anotherEncryptionKey",
              "type": "string"
            }
          ],
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x51640fee"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "certificateId",
          "type": "uint256"
        }
      ],
      "name": "getCertificateData",
      "outputs": [
        {
          "name": "",
          "type": "string[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x31494bbb"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "certificateId",
          "type": "uint256"
        },
        {
          "name": "data",
          "type": "string[]"
        }
      ],
      "name": "updateCertificateData",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x68378017"
    }
  ],
  "bytecode": "0x60806040523480156200001157600080fd5b50604080518082018252601881527f4365727469666963617465204f66204f776e65727368697000000000000000006020808301919091528251808401909352600383527f434f4f000000000000000000000000000000000000000000000000000000000090830152908181620000b17f01ffc9a700000000000000000000000000000000000000000000000000000000640100000000620001cf810204565b620000e57f80ac58cd00000000000000000000000000000000000000000000000000000000640100000000620001cf810204565b620001197f780e9d6300000000000000000000000000000000000000000000000000000000640100000000620001cf810204565b81516200012e9060099060208501906200023c565b5080516200014490600a9060208401906200023c565b50620001797f5b5e139f00000000000000000000000000000000000000000000000000000000640100000000620001cf810204565b5050600c8054600160a060020a031916331790819055604051600160a060020a03919091169250600091507f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3620002e1565b7fffffffff000000000000000000000000000000000000000000000000000000008082161415620001ff57600080fd5b7fffffffff00000000000000000000000000000000000000000000000000000000166000908152602081905260409020805460ff19166001179055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200027f57805160ff1916838001178555620002af565b82800160010185558215620002af579182015b82811115620002af57825182559160200191906001019062000292565b50620002bd929150620002c1565b5090565b620002de91905b80821115620002bd5760008155600101620002c8565b90565b6121fb80620002f16000396000f3006080604052600436106101485763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166301ffc9a7811461014d57806306fdde0314610183578063081812fc146101a5578063095ea7b3146101d257806318160ddd146101f45780631c268fdf1461021657806323b872dd146102365780632f745c591461025657806331494bbb1461027657806342842e0e146102a35780634f6ccce7146102c357806351640fee146102e35780636352211e14610310578063683780171461033057806370a0823114610350578063715018a6146103705780638da5cb5b146103855780638f32d59b1461039a57806395d89b41146103af578063a22cb465146103c4578063b88d4fde146103e4578063c87b56dd14610404578063c89d2b1714610424578063e985e9c514610444578063f2fde38b14610464575b600080fd5b34801561015957600080fd5b5061016d610168366004611c41565b610484565b60405161017a9190612074565b60405180910390f35b34801561018f57600080fd5b506101986104b8565b60405161017a9190612082565b3480156101b157600080fd5b506101c56101c0366004611cb2565b61054f565b60405161017a9190612011565b3480156101de57600080fd5b506101f26101ed366004611c11565b610581565b005b34801561020057600080fd5b50610209610637565b60405161017a91906120c4565b34801561022257600080fd5b506101f2610231366004611c7d565b61063d565b34801561024257600080fd5b506101f2610251366004611b1b565b610781565b34801561026257600080fd5b50610209610271366004611c11565b61080f565b34801561028257600080fd5b50610296610291366004611cb2565b61085d565b60405161017a9190612063565b3480156102af57600080fd5b506101f26102be366004611b1b565b61097a565b3480156102cf57600080fd5b506102096102de366004611cb2565b61099b565b3480156102ef57600080fd5b506103036102fe366004611cb2565b6109d0565b60405161017a91906120b3565b34801561031c57600080fd5b506101c561032b366004611cb2565b610cc2565b34801561033c57600080fd5b506101f261034b366004611cd0565b610ce6565b34801561035c57600080fd5b5061020961036b366004611ac3565b610d38565b34801561037c57600080fd5b506101f2610d6b565b34801561039157600080fd5b506101c5610dd5565b3480156103a657600080fd5b5061016d610de4565b3480156103bb57600080fd5b50610198610df5565b3480156103d057600080fd5b506101f26103df366004611be1565b610e56565b3480156103f057600080fd5b506101f26103ff366004611b68565b610edb565b34801561041057600080fd5b5061019861041f366004611cb2565b610f03565b34801561043057600080fd5b506101f261043f366004611d18565b610fb8565b34801561045057600080fd5b5061016d61045f366004611ae1565b6110ec565b34801561047057600080fd5b506101f261047f366004611ac3565b61111a565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191660009081526020819052604090205460ff1690565b60098054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105445780601f1061051957610100808354040283529160200191610544565b820191906000526020600020905b81548152906001019060200180831161052757829003601f168201915b505050505090505b90565b600061055a82611139565b151561056557600080fd5b50600090815260026020526040902054600160a060020a031690565b600061058c82610cc2565b9050600160a060020a0383811690821614156105a757600080fd5b33600160a060020a03821614806105c357506105c381336110ec565b15156105ce57600080fd5b600082815260026020526040808220805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60075490565b6040805160e081018252825181526020808401518183019081528484015193830193909352606080850151908301526080808501519083015260a0808501519083015260c08085015190830152600d805460018181018084556000938452855160079093027fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb58101938455965180519497929691959194610705937fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb60192919091019061170b565b506040820151805161072191600284019160209091019061170b565b50606082015160038201556080820151600482015560a0820151805161075191600584019160209091019061170b565b5060c0820151805161076d91600684019160209091019061170b565b50505003905061077d3382611156565b5050565b61078b33826111a5565b151561079657600080fd5b600160a060020a03821615156107ab57600080fd5b6107b58382611204565b6107bf8382611273565b6107c9828261137a565b8082600160a060020a031684600160a060020a03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b600061081a83610d38565b821061082557600080fd5b600160a060020a038316600090815260056020526040902080548390811061084957fe5b906000526020600020015490505b92915050565b60603361086983610cc2565b600160a060020a03161461089b5760405160e560020a62461bcd02815260040161089290612093565b60405180910390fd5b6000828152600e6020908152604080832080548251818502810185019093528083529193909284015b8282101561096f5760008481526020908190208301805460408051601f600260001961010060018716150201909416939093049283018590048502810185019091528181529283018282801561095b5780601f106109305761010080835404028352916020019161095b565b820191906000526020600020905b81548152906001019060200180831161093e57829003601f168201915b5050505050815260200190600101906108c4565b505050509050919050565b6109968383836020604051908101604052806000815250610edb565b505050565b60006109a5610637565b82106109b057600080fd5b60078054839081106109be57fe5b90600052602060002001549050919050565b6109d8611789565b336109e283610cc2565b600160a060020a031614610a0b5760405160e560020a62461bcd028152600401610892906120a3565b600d805483908110610a1957fe5b906000526020600020906007020160e0604051908101604052908160008201548152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610ad65780601f10610aab57610100808354040283529160200191610ad6565b820191906000526020600020905b815481529060010190602001808311610ab957829003601f168201915b5050509183525050600282810180546040805160206001841615610100026000190190931694909404601f81018390048302850183019091528084529381019390830182828015610b685780601f10610b3d57610100808354040283529160200191610b68565b820191906000526020600020905b815481529060010190602001808311610b4b57829003601f168201915b505050505081526020016003820154815260200160048201548152602001600582018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610c1e5780601f10610bf357610100808354040283529160200191610c1e565b820191906000526020600020905b815481529060010190602001808311610c0157829003601f168201915b505050918352505060068201805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152938201939291830182828015610cb25780601f10610c8757610100808354040283529160200191610cb2565b820191906000526020600020905b815481529060010190602001808311610c9557829003601f168201915b5050505050815250509050919050565b600081815260016020526040812054600160a060020a031680151561085757600080fd5b33610cf083610cc2565b600160a060020a031614610d195760405160e560020a62461bcd02815260040161089290612093565b6000828152600e602090815260409091208251610996928401906117c7565b6000600160a060020a0382161515610d4f57600080fd5b50600160a060020a031660009081526003602052604090205490565b610d73610de4565b1515610d7e57600080fd5b600c54604051600091600160a060020a0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600c805473ffffffffffffffffffffffffffffffffffffffff19169055565b600c54600160a060020a031690565b600c54600160a060020a0316331490565b600a8054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105445780601f1061051957610100808354040283529160200191610544565b600160a060020a038216331415610e6c57600080fd5b336000818152600460209081526040808320600160a060020a038716808552925291829020805460ff191685151517905590519091907f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3190610ecf908590612074565b60405180910390a35050565b610ee6848484610781565b610ef2848484846113c3565b1515610efd57600080fd5b50505050565b6060610f0e82611139565b1515610f1957600080fd5b6000828152600b602090815260409182902080548351601f600260001961010060018616150201909316929092049182018490048402810184019094528084529091830182828015610fac5780601f10610f8157610100808354040283529160200191610fac565b820191906000526020600020905b815481529060010190602001808311610f8f57829003601f168201915b50505050509050919050565b33610fc287610cc2565b600160a060020a031614610feb5760405160e560020a62461bcd02815260040161089290612093565b84600d87815481101515610ffb57fe5b9060005260206000209060070201600101908051906020019061101f92919061170b565b5083600d8781548110151561103057fe5b9060005260206000209060070201600201908051906020019061105492919061170b565b5082600d8781548110151561106557fe5b90600052602060002090600702016003018190555081600d8781548110151561108a57fe5b906000526020600020906007020160050190805190602001906110ae92919061170b565b5080600d878154811015156110bf57fe5b906000526020600020906007020160060190805190602001906110e392919061170b565b50505050505050565b600160a060020a03918216600090815260046020908152604080832093909416825291909152205460ff1690565b611122610de4565b151561112d57600080fd5b611136816114d4565b50565b600090815260016020526040902054600160a060020a0316151590565b6111608282611552565b600780546000838152600860205260408120829055600182018355919091527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688015550565b6000806111b183610cc2565b905080600160a060020a031684600160a060020a031614806111ec575083600160a060020a03166111e18461054f565b600160a060020a0316145b806111fc57506111fc81856110ec565b949350505050565b81600160a060020a031661121782610cc2565b600160a060020a03161461122a57600080fd5b600081815260026020526040902054600160a060020a03161561077d576000908152600260205260409020805473ffffffffffffffffffffffffffffffffffffffff1916905550565b600080600061128285856115ad565b600084815260066020908152604080832054600160a060020a03891684526005909252909120549093506112bd90600163ffffffff61164316565b600160a060020a0386166000908152600560205260409020805491935090839081106112e557fe5b90600052602060002001549050806005600087600160a060020a0316600160a060020a031681526020019081526020016000208481548110151561132557fe5b6000918252602080832090910192909255600160a060020a038716815260059091526040902080549061135c906000198301611820565b50600093845260066020526040808520859055908452909220555050565b6000611386838361165a565b50600160a060020a039091166000908152600560209081526040808320805460018101825590845282842081018590559383526006909152902055565b6000806113d885600160a060020a03166116ea565b15156113e757600191506114cb565b6040517f150b7a02000000000000000000000000000000000000000000000000000000008152600160a060020a0386169063150b7a02906114329033908a908990899060040161201f565b602060405180830381600087803b15801561144c57600080fd5b505af1158015611460573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506114849190810190611c5f565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1981167f150b7a020000000000000000000000000000000000000000000000000000000014925090505b50949350505050565b600160a060020a03811615156114e957600080fd5b600c54604051600160a060020a038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600c805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600160a060020a038216151561156757600080fd5b611571828261137a565b6040518190600160a060020a038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b81600160a060020a03166115c082610cc2565b600160a060020a0316146115d357600080fd5b600160a060020a0382166000908152600360205260409020546115fd90600163ffffffff61164316565b600160a060020a03909216600090815260036020908152604080832094909455918152600190915220805473ffffffffffffffffffffffffffffffffffffffff19169055565b6000808383111561165357600080fd5b5050900390565b600081815260016020526040902054600160a060020a03161561167c57600080fd5b6000818152600160208181526040808420805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03881690811790915584526003909152909120546116ca916116f2565b600160a060020a0390921660009081526003602052604090209190915550565b6000903b1190565b60008282018381101561170457600080fd5b9392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061174c57805160ff1916838001178555611779565b82800160010185558215611779579182015b8281111561177957825182559160200191906001019061175e565b50611785929150611840565b5090565b60e060405190810160405280600081526020016060815260200160608152602001600081526020016000815260200160608152602001606081525090565b828054828255906000526020600020908101928215611814579160200282015b82811115611814578251805161180491849160209091019061170b565b50916020019190600101906117e7565b5061178592915061185a565b815481835581811115610996576000838152602090206109969181019083015b61054c91905b808211156117855760008155600101611846565b61054c91905b80821115611785576000611874828261187d565b50600101611860565b50805460018160011615610100020316600290046000825580601f106118a35750611136565b601f0160209004906000526020600020908101906111369190611840565b6000611704823561214c565b6000601f820183136118de57600080fd5b81356118f16118ec826120f9565b6120d2565b81815260209384019390925082018360005b8381101561192f5781358601611919888261195d565b8452506020928301929190910190600101611903565b5050505092915050565b60006117048235612158565b6000611704823561215d565b6000611704825161215d565b6000601f8201831361196e57600080fd5b813561197c6118ec8261211a565b9150808252602083016020830185838301111561199857600080fd5b6119a383828461217f565b50505092915050565b600060e082840312156119be57600080fd5b6119c860e06120d2565b905060006119d68484611ab7565b825250602082013567ffffffffffffffff8111156119f357600080fd5b6119ff8482850161195d565b602083015250604082013567ffffffffffffffff811115611a1f57600080fd5b611a2b8482850161195d565b6040830152506060611a3f84828501611ab7565b6060830152506080611a5384828501611ab7565b60808301525060a082013567ffffffffffffffff811115611a7357600080fd5b611a7f8482850161195d565b60a08301525060c082013567ffffffffffffffff811115611a9f57600080fd5b611aab8482850161195d565b60c08301525092915050565b6000611704823561054c565b600060208284031215611ad557600080fd5b60006111fc84846118c1565b60008060408385031215611af457600080fd5b6000611b0085856118c1565b9250506020611b11858286016118c1565b9150509250929050565b600080600060608486031215611b3057600080fd5b6000611b3c86866118c1565b9350506020611b4d868287016118c1565b9250506040611b5e86828701611ab7565b9150509250925092565b60008060008060808587031215611b7e57600080fd5b6000611b8a87876118c1565b9450506020611b9b878288016118c1565b9350506040611bac87828801611ab7565b925050606085013567ffffffffffffffff811115611bc957600080fd5b611bd58782880161195d565b91505092959194509250565b60008060408385031215611bf457600080fd5b6000611c0085856118c1565b9250506020611b1185828601611939565b60008060408385031215611c2457600080fd5b6000611c3085856118c1565b9250506020611b1185828601611ab7565b600060208284031215611c5357600080fd5b60006111fc8484611945565b600060208284031215611c7157600080fd5b60006111fc8484611951565b600060208284031215611c8f57600080fd5b813567ffffffffffffffff811115611ca657600080fd5b6111fc848285016119ac565b600060208284031215611cc457600080fd5b60006111fc8484611ab7565b60008060408385031215611ce357600080fd5b6000611cef8585611ab7565b925050602083013567ffffffffffffffff811115611d0c57600080fd5b611b11858286016118cd565b60008060008060008060c08789031215611d3157600080fd5b6000611d3d8989611ab7565b965050602087013567ffffffffffffffff811115611d5a57600080fd5b611d6689828a0161195d565b955050604087013567ffffffffffffffff811115611d8357600080fd5b611d8f89828a0161195d565b9450506060611da089828a01611ab7565b935050608087013567ffffffffffffffff811115611dbd57600080fd5b611dc989828a0161195d565b92505060a087013567ffffffffffffffff811115611de657600080fd5b611df289828a0161195d565b9150509295509295509295565b611e088161214c565b82525050565b6000611e1982612148565b80845260208401935083602082028501611e3285612142565b60005b84811015611e69578383038852611e4d838351611e7e565b9250611e5882612142565b602098909801979150600101611e35565b50909695505050505050565b611e0881612158565b6000611e8982612148565b808452611e9d81602086016020860161218b565b611ea6816121b7565b9093016020019392505050565b603081527f4365727469666963617465732063616e206f6e6c79206265207570646174656460208201527f206279207468656972206f776e65727300000000000000000000000000000000604082015260600190565b602d81527f4365727469666963617465732063616e206f6e6c79206265207265616420627960208201527f207468656972206f776e65727300000000000000000000000000000000000000604082015260600190565b805160009060e0840190611f738582612008565b5060208301518482036020860152611f8b8282611e7e565b91505060408301518482036040860152611fa58282611e7e565b9150506060830151611fba6060860182612008565b506080830151611fcd6080860182612008565b5060a083015184820360a0860152611fe58282611e7e565b91505060c083015184820360c0860152611fff8282611e7e565b95945050505050565b611e088161054c565b602081016108578284611dff565b6080810161202d8287611dff565b61203a6020830186611dff565b6120476040830185612008565b81810360608301526120598184611e7e565b9695505050505050565b602080825281016117048184611e0e565b602081016108578284611e75565b602080825281016117048184611e7e565b6020808252810161085781611eb3565b6020808252810161085781611f09565b602080825281016117048184611f5f565b602081016108578284612008565b60405181810167ffffffffffffffff811182821017156120f157600080fd5b604052919050565b600067ffffffffffffffff82111561211057600080fd5b5060209081020190565b600067ffffffffffffffff82111561213157600080fd5b506020601f91909101601f19160190565b60200190565b5190565b600160a060020a031690565b151590565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690565b82818337506000910152565b60005b838110156121a657818101518382015260200161218e565b83811115610efd5750506000910152565b601f01601f1916905600a265627a7a72305820d6263078df0c64653309332c7533a32d6075a9e9a06b025e89a7a2da2cc47a426c6578706572696d656e74616cf50037",
  "deployedBytecode": "0x6080604052600436106101485763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166301ffc9a7811461014d57806306fdde0314610183578063081812fc146101a5578063095ea7b3146101d257806318160ddd146101f45780631c268fdf1461021657806323b872dd146102365780632f745c591461025657806331494bbb1461027657806342842e0e146102a35780634f6ccce7146102c357806351640fee146102e35780636352211e14610310578063683780171461033057806370a0823114610350578063715018a6146103705780638da5cb5b146103855780638f32d59b1461039a57806395d89b41146103af578063a22cb465146103c4578063b88d4fde146103e4578063c87b56dd14610404578063c89d2b1714610424578063e985e9c514610444578063f2fde38b14610464575b600080fd5b34801561015957600080fd5b5061016d610168366004611c41565b610484565b60405161017a9190612074565b60405180910390f35b34801561018f57600080fd5b506101986104b8565b60405161017a9190612082565b3480156101b157600080fd5b506101c56101c0366004611cb2565b61054f565b60405161017a9190612011565b3480156101de57600080fd5b506101f26101ed366004611c11565b610581565b005b34801561020057600080fd5b50610209610637565b60405161017a91906120c4565b34801561022257600080fd5b506101f2610231366004611c7d565b61063d565b34801561024257600080fd5b506101f2610251366004611b1b565b610781565b34801561026257600080fd5b50610209610271366004611c11565b61080f565b34801561028257600080fd5b50610296610291366004611cb2565b61085d565b60405161017a9190612063565b3480156102af57600080fd5b506101f26102be366004611b1b565b61097a565b3480156102cf57600080fd5b506102096102de366004611cb2565b61099b565b3480156102ef57600080fd5b506103036102fe366004611cb2565b6109d0565b60405161017a91906120b3565b34801561031c57600080fd5b506101c561032b366004611cb2565b610cc2565b34801561033c57600080fd5b506101f261034b366004611cd0565b610ce6565b34801561035c57600080fd5b5061020961036b366004611ac3565b610d38565b34801561037c57600080fd5b506101f2610d6b565b34801561039157600080fd5b506101c5610dd5565b3480156103a657600080fd5b5061016d610de4565b3480156103bb57600080fd5b50610198610df5565b3480156103d057600080fd5b506101f26103df366004611be1565b610e56565b3480156103f057600080fd5b506101f26103ff366004611b68565b610edb565b34801561041057600080fd5b5061019861041f366004611cb2565b610f03565b34801561043057600080fd5b506101f261043f366004611d18565b610fb8565b34801561045057600080fd5b5061016d61045f366004611ae1565b6110ec565b34801561047057600080fd5b506101f261047f366004611ac3565b61111a565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191660009081526020819052604090205460ff1690565b60098054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105445780601f1061051957610100808354040283529160200191610544565b820191906000526020600020905b81548152906001019060200180831161052757829003601f168201915b505050505090505b90565b600061055a82611139565b151561056557600080fd5b50600090815260026020526040902054600160a060020a031690565b600061058c82610cc2565b9050600160a060020a0383811690821614156105a757600080fd5b33600160a060020a03821614806105c357506105c381336110ec565b15156105ce57600080fd5b600082815260026020526040808220805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60075490565b6040805160e081018252825181526020808401518183019081528484015193830193909352606080850151908301526080808501519083015260a0808501519083015260c08085015190830152600d805460018181018084556000938452855160079093027fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb58101938455965180519497929691959194610705937fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb60192919091019061170b565b506040820151805161072191600284019160209091019061170b565b50606082015160038201556080820151600482015560a0820151805161075191600584019160209091019061170b565b5060c0820151805161076d91600684019160209091019061170b565b50505003905061077d3382611156565b5050565b61078b33826111a5565b151561079657600080fd5b600160a060020a03821615156107ab57600080fd5b6107b58382611204565b6107bf8382611273565b6107c9828261137a565b8082600160a060020a031684600160a060020a03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b600061081a83610d38565b821061082557600080fd5b600160a060020a038316600090815260056020526040902080548390811061084957fe5b906000526020600020015490505b92915050565b60603361086983610cc2565b600160a060020a03161461089b5760405160e560020a62461bcd02815260040161089290612093565b60405180910390fd5b6000828152600e6020908152604080832080548251818502810185019093528083529193909284015b8282101561096f5760008481526020908190208301805460408051601f600260001961010060018716150201909416939093049283018590048502810185019091528181529283018282801561095b5780601f106109305761010080835404028352916020019161095b565b820191906000526020600020905b81548152906001019060200180831161093e57829003601f168201915b5050505050815260200190600101906108c4565b505050509050919050565b6109968383836020604051908101604052806000815250610edb565b505050565b60006109a5610637565b82106109b057600080fd5b60078054839081106109be57fe5b90600052602060002001549050919050565b6109d8611789565b336109e283610cc2565b600160a060020a031614610a0b5760405160e560020a62461bcd028152600401610892906120a3565b600d805483908110610a1957fe5b906000526020600020906007020160e0604051908101604052908160008201548152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610ad65780601f10610aab57610100808354040283529160200191610ad6565b820191906000526020600020905b815481529060010190602001808311610ab957829003601f168201915b5050509183525050600282810180546040805160206001841615610100026000190190931694909404601f81018390048302850183019091528084529381019390830182828015610b685780601f10610b3d57610100808354040283529160200191610b68565b820191906000526020600020905b815481529060010190602001808311610b4b57829003601f168201915b505050505081526020016003820154815260200160048201548152602001600582018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610c1e5780601f10610bf357610100808354040283529160200191610c1e565b820191906000526020600020905b815481529060010190602001808311610c0157829003601f168201915b505050918352505060068201805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152938201939291830182828015610cb25780601f10610c8757610100808354040283529160200191610cb2565b820191906000526020600020905b815481529060010190602001808311610c9557829003601f168201915b5050505050815250509050919050565b600081815260016020526040812054600160a060020a031680151561085757600080fd5b33610cf083610cc2565b600160a060020a031614610d195760405160e560020a62461bcd02815260040161089290612093565b6000828152600e602090815260409091208251610996928401906117c7565b6000600160a060020a0382161515610d4f57600080fd5b50600160a060020a031660009081526003602052604090205490565b610d73610de4565b1515610d7e57600080fd5b600c54604051600091600160a060020a0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600c805473ffffffffffffffffffffffffffffffffffffffff19169055565b600c54600160a060020a031690565b600c54600160a060020a0316331490565b600a8054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105445780601f1061051957610100808354040283529160200191610544565b600160a060020a038216331415610e6c57600080fd5b336000818152600460209081526040808320600160a060020a038716808552925291829020805460ff191685151517905590519091907f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3190610ecf908590612074565b60405180910390a35050565b610ee6848484610781565b610ef2848484846113c3565b1515610efd57600080fd5b50505050565b6060610f0e82611139565b1515610f1957600080fd5b6000828152600b602090815260409182902080548351601f600260001961010060018616150201909316929092049182018490048402810184019094528084529091830182828015610fac5780601f10610f8157610100808354040283529160200191610fac565b820191906000526020600020905b815481529060010190602001808311610f8f57829003601f168201915b50505050509050919050565b33610fc287610cc2565b600160a060020a031614610feb5760405160e560020a62461bcd02815260040161089290612093565b84600d87815481101515610ffb57fe5b9060005260206000209060070201600101908051906020019061101f92919061170b565b5083600d8781548110151561103057fe5b9060005260206000209060070201600201908051906020019061105492919061170b565b5082600d8781548110151561106557fe5b90600052602060002090600702016003018190555081600d8781548110151561108a57fe5b906000526020600020906007020160050190805190602001906110ae92919061170b565b5080600d878154811015156110bf57fe5b906000526020600020906007020160060190805190602001906110e392919061170b565b50505050505050565b600160a060020a03918216600090815260046020908152604080832093909416825291909152205460ff1690565b611122610de4565b151561112d57600080fd5b611136816114d4565b50565b600090815260016020526040902054600160a060020a0316151590565b6111608282611552565b600780546000838152600860205260408120829055600182018355919091527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688015550565b6000806111b183610cc2565b905080600160a060020a031684600160a060020a031614806111ec575083600160a060020a03166111e18461054f565b600160a060020a0316145b806111fc57506111fc81856110ec565b949350505050565b81600160a060020a031661121782610cc2565b600160a060020a03161461122a57600080fd5b600081815260026020526040902054600160a060020a03161561077d576000908152600260205260409020805473ffffffffffffffffffffffffffffffffffffffff1916905550565b600080600061128285856115ad565b600084815260066020908152604080832054600160a060020a03891684526005909252909120549093506112bd90600163ffffffff61164316565b600160a060020a0386166000908152600560205260409020805491935090839081106112e557fe5b90600052602060002001549050806005600087600160a060020a0316600160a060020a031681526020019081526020016000208481548110151561132557fe5b6000918252602080832090910192909255600160a060020a038716815260059091526040902080549061135c906000198301611820565b50600093845260066020526040808520859055908452909220555050565b6000611386838361165a565b50600160a060020a039091166000908152600560209081526040808320805460018101825590845282842081018590559383526006909152902055565b6000806113d885600160a060020a03166116ea565b15156113e757600191506114cb565b6040517f150b7a02000000000000000000000000000000000000000000000000000000008152600160a060020a0386169063150b7a02906114329033908a908990899060040161201f565b602060405180830381600087803b15801561144c57600080fd5b505af1158015611460573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506114849190810190611c5f565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1981167f150b7a020000000000000000000000000000000000000000000000000000000014925090505b50949350505050565b600160a060020a03811615156114e957600080fd5b600c54604051600160a060020a038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600c805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600160a060020a038216151561156757600080fd5b611571828261137a565b6040518190600160a060020a038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b81600160a060020a03166115c082610cc2565b600160a060020a0316146115d357600080fd5b600160a060020a0382166000908152600360205260409020546115fd90600163ffffffff61164316565b600160a060020a03909216600090815260036020908152604080832094909455918152600190915220805473ffffffffffffffffffffffffffffffffffffffff19169055565b6000808383111561165357600080fd5b5050900390565b600081815260016020526040902054600160a060020a03161561167c57600080fd5b6000818152600160208181526040808420805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03881690811790915584526003909152909120546116ca916116f2565b600160a060020a0390921660009081526003602052604090209190915550565b6000903b1190565b60008282018381101561170457600080fd5b9392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061174c57805160ff1916838001178555611779565b82800160010185558215611779579182015b8281111561177957825182559160200191906001019061175e565b50611785929150611840565b5090565b60e060405190810160405280600081526020016060815260200160608152602001600081526020016000815260200160608152602001606081525090565b828054828255906000526020600020908101928215611814579160200282015b82811115611814578251805161180491849160209091019061170b565b50916020019190600101906117e7565b5061178592915061185a565b815481835581811115610996576000838152602090206109969181019083015b61054c91905b808211156117855760008155600101611846565b61054c91905b80821115611785576000611874828261187d565b50600101611860565b50805460018160011615610100020316600290046000825580601f106118a35750611136565b601f0160209004906000526020600020908101906111369190611840565b6000611704823561214c565b6000601f820183136118de57600080fd5b81356118f16118ec826120f9565b6120d2565b81815260209384019390925082018360005b8381101561192f5781358601611919888261195d565b8452506020928301929190910190600101611903565b5050505092915050565b60006117048235612158565b6000611704823561215d565b6000611704825161215d565b6000601f8201831361196e57600080fd5b813561197c6118ec8261211a565b9150808252602083016020830185838301111561199857600080fd5b6119a383828461217f565b50505092915050565b600060e082840312156119be57600080fd5b6119c860e06120d2565b905060006119d68484611ab7565b825250602082013567ffffffffffffffff8111156119f357600080fd5b6119ff8482850161195d565b602083015250604082013567ffffffffffffffff811115611a1f57600080fd5b611a2b8482850161195d565b6040830152506060611a3f84828501611ab7565b6060830152506080611a5384828501611ab7565b60808301525060a082013567ffffffffffffffff811115611a7357600080fd5b611a7f8482850161195d565b60a08301525060c082013567ffffffffffffffff811115611a9f57600080fd5b611aab8482850161195d565b60c08301525092915050565b6000611704823561054c565b600060208284031215611ad557600080fd5b60006111fc84846118c1565b60008060408385031215611af457600080fd5b6000611b0085856118c1565b9250506020611b11858286016118c1565b9150509250929050565b600080600060608486031215611b3057600080fd5b6000611b3c86866118c1565b9350506020611b4d868287016118c1565b9250506040611b5e86828701611ab7565b9150509250925092565b60008060008060808587031215611b7e57600080fd5b6000611b8a87876118c1565b9450506020611b9b878288016118c1565b9350506040611bac87828801611ab7565b925050606085013567ffffffffffffffff811115611bc957600080fd5b611bd58782880161195d565b91505092959194509250565b60008060408385031215611bf457600080fd5b6000611c0085856118c1565b9250506020611b1185828601611939565b60008060408385031215611c2457600080fd5b6000611c3085856118c1565b9250506020611b1185828601611ab7565b600060208284031215611c5357600080fd5b60006111fc8484611945565b600060208284031215611c7157600080fd5b60006111fc8484611951565b600060208284031215611c8f57600080fd5b813567ffffffffffffffff811115611ca657600080fd5b6111fc848285016119ac565b600060208284031215611cc457600080fd5b60006111fc8484611ab7565b60008060408385031215611ce357600080fd5b6000611cef8585611ab7565b925050602083013567ffffffffffffffff811115611d0c57600080fd5b611b11858286016118cd565b60008060008060008060c08789031215611d3157600080fd5b6000611d3d8989611ab7565b965050602087013567ffffffffffffffff811115611d5a57600080fd5b611d6689828a0161195d565b955050604087013567ffffffffffffffff811115611d8357600080fd5b611d8f89828a0161195d565b9450506060611da089828a01611ab7565b935050608087013567ffffffffffffffff811115611dbd57600080fd5b611dc989828a0161195d565b92505060a087013567ffffffffffffffff811115611de657600080fd5b611df289828a0161195d565b9150509295509295509295565b611e088161214c565b82525050565b6000611e1982612148565b80845260208401935083602082028501611e3285612142565b60005b84811015611e69578383038852611e4d838351611e7e565b9250611e5882612142565b602098909801979150600101611e35565b50909695505050505050565b611e0881612158565b6000611e8982612148565b808452611e9d81602086016020860161218b565b611ea6816121b7565b9093016020019392505050565b603081527f4365727469666963617465732063616e206f6e6c79206265207570646174656460208201527f206279207468656972206f776e65727300000000000000000000000000000000604082015260600190565b602d81527f4365727469666963617465732063616e206f6e6c79206265207265616420627960208201527f207468656972206f776e65727300000000000000000000000000000000000000604082015260600190565b805160009060e0840190611f738582612008565b5060208301518482036020860152611f8b8282611e7e565b91505060408301518482036040860152611fa58282611e7e565b9150506060830151611fba6060860182612008565b506080830151611fcd6080860182612008565b5060a083015184820360a0860152611fe58282611e7e565b91505060c083015184820360c0860152611fff8282611e7e565b95945050505050565b611e088161054c565b602081016108578284611dff565b6080810161202d8287611dff565b61203a6020830186611dff565b6120476040830185612008565b81810360608301526120598184611e7e565b9695505050505050565b602080825281016117048184611e0e565b602081016108578284611e75565b602080825281016117048184611e7e565b6020808252810161085781611eb3565b6020808252810161085781611f09565b602080825281016117048184611f5f565b602081016108578284612008565b60405181810167ffffffffffffffff811182821017156120f157600080fd5b604052919050565b600067ffffffffffffffff82111561211057600080fd5b5060209081020190565b600067ffffffffffffffff82111561213157600080fd5b506020601f91909101601f19160190565b60200190565b5190565b600160a060020a031690565b151590565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690565b82818337506000910152565b60005b838110156121a657818101518382015260200161218e565b83811115610efd5750506000910152565b601f01601f1916905600a265627a7a72305820d6263078df0c64653309332c7533a32d6075a9e9a06b025e89a7a2da2cc47a426c6578706572696d656e74616cf50037",
  "sourceMap": "289:3887:0:-;;;331:96;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;473:87:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;612:39:2;631:19;612:18;;;;:39;:::i;:::-;1832::6;1851:19;1832:18;;;;:39;:::i;:::-;1026:49:7;1045:29;1026:18;;;;:49;:::i;:::-;677:12:9;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;695:16:9;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;791:46:9;810:26;791:18;;;;:46;:::i;:::-;-1:-1:-1;;509:6:5;:19;;-1:-1:-1;;;;;;509:19:5;518:10;509:19;;;;;539:40;;-1:-1:-1;;;;;572:6:5;;;;;-1:-1:-1;509:6:5;;-1:-1:-1;539:40:5;;509:6;;539:40;289:3887:0;;951:154:2;1028:25;;;;;;1020:34;;;;;;1060:33;;:20;:33;;;;;;;;;;:40;;-1:-1:-1;;1060:40:2;1096:4;1060:40;;;951:154::o;289:3887:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;289:3887:0;;;-1:-1:-1;289:3887:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "289:3887:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;739:141:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;739:141:2;;;;;;;;;;;;;;;;;;;;;;;;;936:70:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;936:70:9;;;;;;;;;;;;3526:141:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3526:141:6;;;;;;;;;;;;;;;;;2985:270;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2985:270:6;;;;;;;;;;;1779:88:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1779:88:7;;;;;;;;;;;;1090:607:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1090:607:0;;;;;;;;;5031:326:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;5031:326:6;;;;;;;;;1439:198:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1439:198:7;;;;;;;;;3470:273:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3470:273:0;;;;;;;;;;;;;;;;;5970:193:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;5970:193:6;;;;;;;;;2190:138:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2190:138:7;;;;;;;;;2995:265:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2995:265:0;;;;;;;;;;;;;;;;;2419:163:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2419:163:6;;;;;;;;;3913:261:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3913:261:0;;;;;;;;;2067:140:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2067:140:6;;;;;;;;;1273:127:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1273:127:5;;;;639:70;;8:9:-1;5:2;;;30:1;27;20:12;5:2;639:70:5;;;;926:83;;8:9:-1;5:2;;;30:1;27;20:12;5:2;926:83:5;;;;1104:74:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1104:74:9;;;;3945:199:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3945:199:6;;;;;;;;;6842:265;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;6842:265:6;;;;;;;;;1365:134:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1365:134:9;;;;;;;;;2152:624:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2152:624:0;;;;;;;;;4451:165:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4451:165:6;;;;;;;;;1561:101:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1561:101:5;;;;;;;;;739:141:2;-1:-1:-1;;842:33:2;821:4;842:33;;;;;;;;;;;;;;739:141::o;936:70:9:-;996:5;989:12;;;;;;;;-1:-1:-1;;989:12:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;975:6;;989:12;;996:5;;989:12;;996:5;989:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;936:70;;:::o;3526:141:6:-;3585:7;3608:16;3616:7;3608;:16::i;:::-;3600:25;;;;;;;;-1:-1:-1;3638:24:6;;;;:15;:24;;;;;;-1:-1:-1;;;;;3638:24:6;;3526:141::o;2985:270::-;3044:13;3060:16;3068:7;3060;:16::i;:::-;3044:32;-1:-1:-1;;;;;;3090:11:6;;;;;;;;3082:20;;;;;;3116:10;-1:-1:-1;;;;;3116:19:6;;;;:58;;;3139:35;3156:5;3163:10;3139:16;:35::i;:::-;3108:67;;;;;;;;3182:24;;;;:15;:24;;;;;;:29;;-1:-1:-1;;3182:29:6;-1:-1:-1;;;;;3182:29:6;;;;;;;;;3222:28;;3182:24;;3222:28;;;;;;;2985:270;;;:::o;1779:88:7:-;1845:10;:17;1779:88;:::o;1090:607:0:-;1231:402;;;;;;;;1270:22;;1231:402;;;1316:19;;;;1231:402;;;;;;1360:20;;;;1231:402;;;;;;;;1405:20;;;;1231:402;;;;;1454:24;;;;1231:402;;;;;1513:30;;;;1231:402;;;;;1583:35;;;;1231:402;;;;1200:12;27:10:-1;;1646:1:0;23:18:-1;;;45:23;;;1176:21:0;1200:443;;;;;;;;;;;;;;;;;;;1176:21;;1646:1;;23:18:-1;;1231:402:0;;1200:443;;;;;;;;;;;:::i;:::-;-1:-1:-1;1200:443:0;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1200:443:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1200:443:0;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:447;1176:471;;1658:32;1664:10;1676:13;1658:5;:32::i;:::-;1090:607;;:::o;5031:326:6:-;5139:39;5158:10;5170:7;5139:18;:39::i;:::-;5131:48;;;;;;;;-1:-1:-1;;;;;5193:16:6;;;;5185:25;;;;;;5217:29;5232:4;5238:7;5217:14;:29::i;:::-;5252:31;5269:4;5275:7;5252:16;:31::i;:::-;5289:24;5301:2;5305:7;5289:11;:24::i;:::-;5344:7;5340:2;-1:-1:-1;;;;;5325:27:6;5334:4;-1:-1:-1;;;;;5325:27:6;;;;;;;;;;;5031:326;;;:::o;1439:198:7:-;1543:7;1576:16;1586:5;1576:9;:16::i;:::-;1568:24;;1560:33;;;;;;-1:-1:-1;;;;;1606:19:7;;;;;;:12;:19;;;;;:26;;1626:5;;1606:26;;;;;;;;;;;;;;1599:33;;1439:198;;;;;:::o;3470:273:0:-;3565:8;3624:10;3598:22;3606:13;3598:7;:22::i;:::-;-1:-1:-1;;;;;3598:36:0;;3590:97;;;;-1:-1:-1;;;;;3590:97:0;;;;;;;;;;;;;;;;;3705:31;;;;:16;:31;;;;;;;;3698:38;;;;;;;;;;;;;;;;;;;3705:31;;3698:38;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3698:38:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3470:273;;;:::o;5970:193:6:-;6119:39;6136:4;6142:2;6146:7;6119:39;;;;;;;;;;;;;:16;:39::i;:::-;5970:193;;;:::o;2190:138:7:-;2248:7;2279:13;:11;:13::i;:::-;2271:21;;2263:30;;;;;;2306:10;:17;;2317:5;;2306:17;;;;;;;;;;;;;;2299:24;;2190:138;;;:::o;2995:265:0:-;3086:11;;:::i;:::-;3148:10;3122:22;3130:13;3122:7;:22::i;:::-;-1:-1:-1;;;;;3122:36:0;;3114:94;;;;-1:-1:-1;;;;;3114:94:0;;;;;;;;;3226:12;:27;;3239:13;;3226:27;;;;;;;;;;;;;;;;3219:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3219:34:0;;;-1:-1:-1;;3219:34:0;;;;;;;;;;;;;;;;-1:-1:-1;;3219:34:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3219:34:0;;;-1:-1:-1;;3219:34:0;;;;;;;;;;;;;;;;-1:-1:-1;;3219:34:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2995:265;;;:::o;2419:163:6:-;2474:7;2505:20;;;:11;:20;;;;;;-1:-1:-1;;;;;2505:20:6;2539:19;;;2531:28;;;;;3913:261:0;4055:10;4029:22;4037:13;4029:7;:22::i;:::-;-1:-1:-1;;;;;4029:36:0;;4021:97;;;;-1:-1:-1;;;;;4021:97:0;;;;;;;;;4129:31;;;;:16;:31;;;;;;;;:38;;;;;;;;:::i;2067:140:6:-;2122:7;-1:-1:-1;;;;;2145:19:6;;;;2137:28;;;;;;-1:-1:-1;;;;;;2178:24:6;;;;;:17;:24;;;;;;;2067:140::o;1273:127:5:-;824:9;:7;:9::i;:::-;816:18;;;;;;;;1351:6;;1330:40;;1367:1;;-1:-1:-1;;;;;1351:6:5;;1330:40;;1367:1;;1330:40;1376:6;:19;;-1:-1:-1;;1376:19:5;;;1273:127::o;639:70::-;698:6;;-1:-1:-1;;;;;698:6:5;639:70;:::o;926:83::-;998:6;;-1:-1:-1;;;;;998:6:5;984:10;:20;;926:83::o;1104:74:9:-;1166:7;1159:14;;;;;;;;-1:-1:-1;;1159:14:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1145:6;;1159:14;;1166:7;;1159:14;;1166:7;1159:14;;;;;;;;;;;;;;;;;;;;;;;;3945:199:6;-1:-1:-1;;;;;4020:16:6;;4026:10;4020:16;;4012:25;;;;;;4062:10;4043:30;;;;:18;:30;;;;;;;;-1:-1:-1;;;;;4043:34:6;;;;;;;;;;;:45;;-1:-1:-1;;4043:45:6;;;;;;;4099:40;;4043:34;;4062:10;4099:40;;;;4043:45;;4099:40;;;;;;;;;;3945:199;;:::o;6842:265::-;6963:31;6976:4;6982:2;6986:7;6963:12;:31::i;:::-;7053:48;7076:4;7082:2;7086:7;7095:5;7053:22;:48::i;:::-;7045:57;;;;;;;;6842:265;;;;:::o;1365:134:9:-;1423:6;1445:16;1453:7;1445;:16::i;:::-;1437:25;;;;;;;;1475:19;;;;:10;:19;;;;;;;;;1468:26;;;;;;-1:-1:-1;;1468:26:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1475:19;;1468:26;;1475:19;1468:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1365:134;;;:::o;2152:624:0:-;2402:10;2376:22;2384:13;2376:7;:22::i;:::-;-1:-1:-1;;;;;2376:36:0;;2368:97;;;;-1:-1:-1;;;;;2368:97:0;;;;;;;;;2511:4;2476:12;2489:13;2476:27;;;;;;;;;;;;;;;;;;;;:32;;:39;;;;;;;;;;;;:::i;:::-;;2561:5;2525:12;2538:13;2525:27;;;;;;;;;;;;;;;;;;;;:33;;:41;;;;;;;;;;;;:::i;:::-;;2612:5;2576:12;2589:13;2576:27;;;;;;;;;;;;;;;;;;;;:33;;:41;;;;2673:15;2627:12;2640:13;2627:27;;;;;;;;;;;;;;;;;;;;:43;;:61;;;;;;;;;;;;:::i;:::-;;2749:20;2698:12;2711:13;2698:27;;;;;;;;;;;;;;;;;;;;:48;;:71;;;;;;;;;;;;:::i;:::-;;2152:624;;;;;;:::o;4451:165:6:-;-1:-1:-1;;;;;4576:25:6;;;4555:4;4576:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4451:165::o;1561:101:5:-;824:9;:7;:9::i;:::-;816:18;;;;;;;;1629:28;1648:8;1629:18;:28::i;:::-;1561:101;:::o;7284:142:6:-;7341:4;7369:20;;;:11;:20;;;;;;-1:-1:-1;;;;;7369:20:6;7402:19;;;7284:142::o;4796:169:7:-;4855:24;4867:2;4871:7;4855:11;:24::i;:::-;4913:10;:17;;4886:24;;;;:15;:24;;;;;:44;;;39:1:-1;23:18;;45:23;;4936:24:7;;;;;;;-1:-1:-1;4796:169:7:o;7771:432:6:-;7880:4;7894:13;7910:16;7918:7;7910;:16::i;:::-;7894:32;;8104:5;-1:-1:-1;;;;;8093:16:6;:7;-1:-1:-1;;;;;8093:16:6;;:57;;;;8143:7;-1:-1:-1;;;;;8119:31:6;:20;8131:7;8119:11;:20::i;:::-;-1:-1:-1;;;;;8119:31:6;;8093:57;:99;;;;8160:32;8177:5;8184:7;8160:16;:32::i;:::-;8078:120;7771:432;-1:-1:-1;;;;7771:432:6:o;11449:210::-;11547:5;-1:-1:-1;;;;;11527:25:6;:16;11535:7;11527;:16::i;:::-;-1:-1:-1;;;;;11527:25:6;;11519:34;;;;;;11599:1;11563:24;;;:15;:24;;;;;;-1:-1:-1;;;;;11563:24:6;:38;11559:96;;11646:1;11611:24;;;:15;:24;;;;;:37;;-1:-1:-1;;11611:37:6;;;-1:-1:-1;11449:210:6:o;3517:1020:7:-;3770:18;3823:22;3886:17;3589:37;3612:4;3618:7;3589:22;:37::i;:::-;3791:26;;;;:17;:26;;;;;;;;;-1:-1:-1;;;;;3848:18:7;;;;:12;:18;;;;;;:25;3791:26;;-1:-1:-1;3848:32:7;;3878:1;3848:32;:29;:32;:::i;:::-;-1:-1:-1;;;;;3906:18:7;;;;;;:12;:18;;;;;:34;;3823:57;;-1:-1:-1;3906:18:7;3823:57;;3906:34;;;;;;;;;;;;;;3886:54;;3980:9;3947:12;:18;3960:4;-1:-1:-1;;;;;3947:18:7;-1:-1:-1;;;;;3947:18:7;;;;;;;;;;;;3966:10;3947:30;;;;;;;;;;;;;;;;;;;;;:42;;;;-1:-1:-1;;;;;4067:18:7;;;;:12;:18;;;;;;:27;;;;;-1:-1:-1;;4067:27:7;;;:::i;:::-;-1:-1:-1;4484:1:7;4455:26;;;:17;:26;;;;;;:30;;;4491:28;;;;;;:41;-1:-1:-1;;3517:1020:7:o;2786:223::-;2887:14;2851:30;2869:2;2873:7;2851:17;:30::i;:::-;-1:-1:-1;;;;;;2904:16:7;;;;;;;:12;:16;;;;;;;;:23;;39:1:-1;23:18;;45:23;;2933:30:7;;;;;;;;;;;2969:26;;;:17;:26;;;;;:35;2786:223::o;10850:340:6:-;10984:4;11051:13;11003:15;:2;-1:-1:-1;;;;;11003:13:6;;:15::i;:::-;11002:16;10998:48;;;11035:4;11028:11;;;;10998:48;11067:77;;;;;-1:-1:-1;;;;;11067:36:6;;;;;:77;;11111:10;;11123:4;;11129:7;;11138:5;;11067:77;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11067:77:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11067:77:6;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;11067:77:6;;;;;;;;;-1:-1:-1;;11158:26:6;;11168:16;11158:26;;-1:-1:-1;11051:93:6;-1:-1:-1;10850:340:6;;;;;;;;:::o;1796:169:5:-;-1:-1:-1;;;;;1865:22:5;;;;1857:31;;;;;;1920:6;;1899:38;;-1:-1:-1;;;;;1899:38:5;;;;1920:6;;1899:38;;1920:6;;1899:38;1943:6;:17;;-1:-1:-1;;1943:17:5;-1:-1:-1;;;;;1943:17:5;;;;;;;;;;1796:169::o;8450:163:6:-;-1:-1:-1;;;;;8517:16:6;;;;8509:25;;;;;;8540:24;8552:2;8556:7;8540:11;:24::i;:::-;8575:33;;8600:7;;-1:-1:-1;;;;;8575:33:6;;;8592:1;;8575:33;;8592:1;;8575:33;8450:163;;:::o;10136:211::-;10236:4;-1:-1:-1;;;;;10216:24:6;:16;10224:7;10216;:16::i;:::-;-1:-1:-1;;;;;10216:24:6;;10208:33;;;;;;-1:-1:-1;;;;;10273:23:6;;;;;;:17;:23;;;;;;:30;;10301:1;10273:30;:27;:30;:::i;:::-;-1:-1:-1;;;;;10247:23:6;;;;;;;:17;:23;;;;;;;;:56;;;;10309:20;;;:11;:20;;;;:33;;-1:-1:-1;;10309:33:6;;;10136:211::o;1078:131:4:-;1136:7;;1159:6;;;;1151:15;;;;;;-1:-1:-1;;1184:5:4;;;1078:131::o;9432:202:6:-;9537:1;9505:20;;;:11;:20;;;;;;-1:-1:-1;;;;;9505:20:6;:34;9497:43;;;;;;9546:20;;;;:11;:20;;;;;;;;:25;;-1:-1:-1;;9546:25:6;-1:-1:-1;;;;;9546:25:6;;;;;;;;9601:21;;:17;:21;;;;;;;:28;;:25;:28::i;:::-;-1:-1:-1;;;;;9577:21:6;;;;;;;:17;:21;;;;;:52;;;;-1:-1:-1;9432:202:6:o;449:582:14:-;509:4;984:20;;1018:8;;449:582::o;1272:131:4:-;1330:7;1357:5;;;1376:6;;;;1368:15;;;;;;1397:1;1272:131;-1:-1:-1;;;1272:131:4:o;289:3887:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;289:3887:0;;;-1:-1:-1;289:3887:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;289:3887:0;;;-1:-1:-1;289:3887:0;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;5:118:-1:-;;72:46;110:6;97:20;72:46;;147:696;;263:4;251:17;;247:27;-1:-1;237:2;;288:1;285;278:12;237:2;325:6;312:20;347:86;362:70;425:6;362:70;;;347:86;;;461:21;;;505:4;493:17;;;;338:95;;-1:-1;518:14;;493:17;613:1;598:239;623:6;620:1;617:13;598:239;;;706:3;693:17;685:6;681:30;730:43;769:3;757:10;730:43;;;718:56;;-1:-1;797:4;788:14;;;;816;;;;;645:1;638:9;598:239;;;602:14;230:613;;;;;;;;851:112;;915:43;950:6;937:20;915:43;;970:116;;1036:45;1073:6;1060:20;1036:45;;1093:120;;1170:38;1200:6;1194:13;1170:38;;1221:440;;1315:4;1303:17;;1299:27;-1:-1;1289:2;;1340:1;1337;1330:12;1289:2;1377:6;1364:20;1399:64;1414:48;1455:6;1414:48;;1399:64;1390:73;;1483:6;1476:5;1469:21;1519:4;1511:6;1507:17;1552:4;1545:5;1541:16;1587:3;1578:6;1573:3;1569:16;1566:25;1563:2;;;1604:1;1601;1594:12;1563:2;1614:41;1648:6;1643:3;1638;1614:41;;;1282:379;;;;;;;;2592:1596;;2708:4;2696:9;2691:3;2687:19;2683:30;2680:2;;;2726:1;2723;2716:12;2680:2;2744:20;2759:4;2744:20;;;2735:29;-1:-1;2817:1;2848:49;2893:3;2873:9;2848:49;;;2824:74;;-1:-1;2987:2;2972:18;;2959:32;3011:18;3000:30;;2997:2;;;3043:1;3040;3033:12;2997:2;3078:55;3129:3;3120:6;3109:9;3105:22;3078:55;;;3071:4;3064:5;3060:16;3053:81;2919:226;3224:2;3213:9;3209:18;3196:32;3248:18;3240:6;3237:30;3234:2;;;3280:1;3277;3270:12;3234:2;3315:55;3366:3;3357:6;3346:9;3342:22;3315:55;;;3308:4;3301:5;3297:16;3290:81;3155:227;3433:2;3466:49;3511:3;3502:6;3491:9;3487:22;3466:49;;;3459:4;3452:5;3448:16;3441:75;3392:135;3582:3;3616:49;3661:3;3652:6;3641:9;3637:22;3616:49;;;3609:4;3602:5;3598:16;3591:75;3537:140;3766:3;3755:9;3751:19;3738:33;3791:18;3783:6;3780:30;3777:2;;;3823:1;3820;3813:12;3777:2;3858:55;3909:3;3900:6;3889:9;3885:22;3858:55;;;3851:4;3844:5;3840:16;3833:81;3687:238;4019:3;4008:9;4004:19;3991:33;4044:18;4036:6;4033:30;4030:2;;;4076:1;4073;4066:12;4030:2;4111:55;4162:3;4153:6;4142:9;4138:22;4111:55;;;4104:4;4097:5;4093:16;4086:81;3935:243;2674:1514;;;;;4195:118;;4262:46;4300:6;4287:20;4262:46;;4320:241;;4424:2;4412:9;4403:7;4399:23;4395:32;4392:2;;;4440:1;4437;4430:12;4392:2;4475:1;4492:53;4537:7;4517:9;4492:53;;4568:366;;;4689:2;4677:9;4668:7;4664:23;4660:32;4657:2;;;4705:1;4702;4695:12;4657:2;4740:1;4757:53;4802:7;4782:9;4757:53;;;4747:63;;4719:97;4847:2;4865:53;4910:7;4901:6;4890:9;4886:22;4865:53;;;4855:63;;4826:98;4651:283;;;;;;4941:491;;;;5079:2;5067:9;5058:7;5054:23;5050:32;5047:2;;;5095:1;5092;5085:12;5047:2;5130:1;5147:53;5192:7;5172:9;5147:53;;;5137:63;;5109:97;5237:2;5255:53;5300:7;5291:6;5280:9;5276:22;5255:53;;;5245:63;;5216:98;5345:2;5363:53;5408:7;5399:6;5388:9;5384:22;5363:53;;;5353:63;;5324:98;5041:391;;;;;;5439:721;;;;;5603:3;5591:9;5582:7;5578:23;5574:33;5571:2;;;5620:1;5617;5610:12;5571:2;5655:1;5672:53;5717:7;5697:9;5672:53;;;5662:63;;5634:97;5762:2;5780:53;5825:7;5816:6;5805:9;5801:22;5780:53;;;5770:63;;5741:98;5870:2;5888:53;5933:7;5924:6;5913:9;5909:22;5888:53;;;5878:63;;5849:98;6006:2;5995:9;5991:18;5978:32;6030:18;6022:6;6019:30;6016:2;;;6062:1;6059;6052:12;6016:2;6082:62;6136:7;6127:6;6116:9;6112:22;6082:62;;;6072:72;;5957:193;5565:595;;;;;;;;6167:360;;;6285:2;6273:9;6264:7;6260:23;6256:32;6253:2;;;6301:1;6298;6291:12;6253:2;6336:1;6353:53;6398:7;6378:9;6353:53;;;6343:63;;6315:97;6443:2;6461:50;6503:7;6494:6;6483:9;6479:22;6461:50;;6534:366;;;6655:2;6643:9;6634:7;6630:23;6626:32;6623:2;;;6671:1;6668;6661:12;6623:2;6706:1;6723:53;6768:7;6748:9;6723:53;;;6713:63;;6685:97;6813:2;6831:53;6876:7;6867:6;6856:9;6852:22;6831:53;;6907:239;;7010:2;6998:9;6989:7;6985:23;6981:32;6978:2;;;7026:1;7023;7016:12;6978:2;7061:1;7078:52;7122:7;7102:9;7078:52;;7153:261;;7267:2;7255:9;7246:7;7242:23;7238:32;7235:2;;;7283:1;7280;7273:12;7235:2;7318:1;7335:63;7390:7;7370:9;7335:63;;7421:381;;7552:2;7540:9;7531:7;7527:23;7523:32;7520:2;;;7568:1;7565;7558:12;7520:2;7603:31;;7654:18;7643:30;;7640:2;;;7686:1;7683;7676:12;7640:2;7706:80;7778:7;7769:6;7758:9;7754:22;7706:80;;7809:241;;7913:2;7901:9;7892:7;7888:23;7884:32;7881:2;;;7929:1;7926;7919:12;7881:2;7964:1;7981:53;8026:7;8006:9;7981:53;;8057:514;;;8209:2;8197:9;8188:7;8184:23;8180:32;8177:2;;;8225:1;8222;8215:12;8177:2;8260:1;8277:53;8322:7;8302:9;8277:53;;;8267:63;;8239:97;8395:2;8384:9;8380:18;8367:32;8419:18;8411:6;8408:30;8405:2;;;8451:1;8448;8441:12;8405:2;8471:84;8547:7;8538:6;8527:9;8523:22;8471:84;;8578:1293;;;;;;;8807:3;8795:9;8786:7;8782:23;8778:33;8775:2;;;8824:1;8821;8814:12;8775:2;8859:1;8876:53;8921:7;8901:9;8876:53;;;8866:63;;8838:97;8994:2;8983:9;8979:18;8966:32;9018:18;9010:6;9007:30;9004:2;;;9050:1;9047;9040:12;9004:2;9070:63;9125:7;9116:6;9105:9;9101:22;9070:63;;;9060:73;;8945:194;9198:2;9187:9;9183:18;9170:32;9222:18;9214:6;9211:30;9208:2;;;9254:1;9251;9244:12;9208:2;9274:63;9329:7;9320:6;9309:9;9305:22;9274:63;;;9264:73;;9149:194;9374:2;9392:53;9437:7;9428:6;9417:9;9413:22;9392:53;;;9382:63;;9353:98;9510:3;9499:9;9495:19;9482:33;9535:18;9527:6;9524:30;9521:2;;;9567:1;9564;9557:12;9521:2;9587:63;9642:7;9633:6;9622:9;9618:22;9587:63;;;9577:73;;9461:195;9715:3;9704:9;9700:19;9687:33;9740:18;9732:6;9729:30;9726:2;;;9772:1;9769;9762:12;9726:2;9792:63;9847:7;9838:6;9827:9;9823:22;9792:63;;;9782:73;;9666:195;8769:1102;;;;;;;;;9878:110;9951:31;9976:5;9951:31;;;9946:3;9939:44;9933:55;;;10024:773;;10171:60;10225:5;10171:60;;;10249:6;10244:3;10237:19;10273:4;10268:3;10264:14;10257:21;;10321:3;10363:4;10355:6;10351:17;10346:3;10342:27;10389:62;10445:5;10389:62;;;10472:1;10457:301;10482:6;10479:1;10476:13;10457:301;;;10544:9;10538:4;10534:20;10529:3;10522:33;10570:70;10635:4;10626:6;10620:13;10570:70;;;10562:78;;10657:66;10716:6;10657:66;;;10746:4;10737:14;;;;;10647:76;-1:-1;10504:1;10497:9;10457:301;;;-1:-1;10771:4;;10150:647;-1:-1;;;;;;10150:647;10805:101;10872:28;10894:5;10872:28;;10913:297;;11013:38;11045:5;11013:38;;;11068:6;11063:3;11056:19;11080:63;11136:6;11129:4;11124:3;11120:14;11113:4;11106:5;11102:16;11080:63;;;11175:29;11197:6;11175:29;;;11155:50;;;11168:4;11155:50;;10993:217;-1:-1;;;10993:217;11824:397;11979:2;11967:15;;12016:66;12011:2;12002:12;;11995:88;12117:66;12112:2;12103:12;;12096:88;12212:2;12203:12;;11960:261;12230:397;12385:2;12373:15;;12422:66;12417:2;12408:12;;12401:88;12523:66;12518:2;12509:12;;12502:88;12618:2;12609:12;;12366:261;12690:1628;12907:22;;12690:1628;;12835:4;12826:14;;;12941:61;12830:3;12907:22;12941:61;;;12855:159;13090:4;13083:5;13079:16;13073:23;13141:3;13135:4;13131:14;13124:4;13119:3;13115:14;13108:38;13161:68;13224:4;13211:11;13161:68;;;13153:76;;13024:217;13318:4;13311:5;13307:16;13301:23;13369:3;13363:4;13359:14;13352:4;13347:3;13343:14;13336:38;13389:68;13452:4;13439:11;13389:68;;;13381:76;;13251:218;13546:4;13539:5;13535:16;13529:23;13564:62;13620:4;13615:3;13611:14;13598:11;13564:62;;;13479:159;13719:4;13712:5;13708:16;13702:23;13737:62;13793:4;13788:3;13784:14;13771:11;13737:62;;;13648:163;13898:4;13891:5;13887:16;13881:23;13949:3;13943:4;13939:14;13932:4;13927:3;13923:14;13916:38;13969:68;14032:4;14019:11;13969:68;;;13961:76;;13821:228;14141:4;14134:5;14130:16;14124:23;14192:3;14186:4;14182:14;14175:4;14170:3;14166:14;14159:38;14212:68;14275:4;14262:11;14212:68;;;14204:76;12808:1510;-1:-1;;;;;12808:1510;14325:110;14398:31;14423:5;14398:31;;14442:193;14550:2;14535:18;;14564:61;14539:9;14598:6;14564:61;;14642:581;14852:3;14837:19;;14867:61;14841:9;14901:6;14867:61;;;14939:62;14997:2;14986:9;14982:18;14973:6;14939:62;;;15012;15070:2;15059:9;15055:18;15046:6;15012:62;;;15122:9;15116:4;15112:20;15107:2;15096:9;15092:18;15085:48;15147:66;15208:4;15199:6;15147:66;;;15139:74;14823:400;-1:-1;;;;;;14823:400;15230:365;15400:2;15414:47;;;15385:18;;15475:110;15385:18;15571:6;15475:110;;15602:181;15704:2;15689:18;;15718:55;15693:9;15746:6;15718:55;;15790:281;15918:2;15932:47;;;15903:18;;15993:68;15903:18;16047:6;15993:68;;16078:387;16259:2;16273:47;;;16244:18;;16334:121;16244:18;16334:121;;16472:387;16653:2;16667:47;;;16638:18;;16728:121;16638:18;16728:121;;16866:349;17028:2;17042:47;;;17013:18;;17103:102;17013:18;17191:6;17103:102;;17222:193;17330:2;17315:18;;17344:61;17319:9;17378:6;17344:61;;17422:256;17484:2;17478:9;17510:17;;;17585:18;17570:34;;17606:22;;;17567:62;17564:2;;;17642:1;17639;17632:12;17564:2;17658;17651:22;17462:216;;-1:-1;17462:216;17685:264;;17850:18;17842:6;17839:30;17836:2;;;17882:1;17879;17872:12;17836:2;-1:-1;17911:4;17899:17;;;17929:15;;17773:176;17956:258;;18099:18;18091:6;18088:30;18085:2;;;18131:1;18128;18121:12;18085:2;-1:-1;18204:4;18175;18152:17;;;;-1:-1;;18148:33;18194:15;;18022:192;18751:127;18866:4;18854:17;;18835:43;18887:113;18983:12;;18967:33;19436:128;-1:-1;;;;;19505:54;;19488:76;19571:92;19644:13;19637:21;;19620:43;19990:151;-1:-1;;20058:78;;20041:100;20235:145;20316:6;20311:3;20306;20293:30;-1:-1;20372:1;20354:16;;20347:27;20286:94;20389:268;20454:1;20461:101;20475:6;20472:1;20469:13;20461:101;;;20542:11;;;20536:18;20523:11;;;20516:39;20497:2;20490:10;20461:101;;;20577:6;20574:1;20571:13;20568:2;;;-1:-1;;20642:1;20624:16;;20617:27;20438:219;20665:97;20753:2;20733:14;-1:-1;;20729:28;;20713:49",
  "source": "pragma solidity 0.4.25;\npragma experimental ABIEncoderV2;\n\nimport \"openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol\";\nimport \"openzeppelin-solidity/contracts/ownership/Ownable.sol\";\n\n\n/**\n * @title Certificate of Ownership\n */\n/* TODO: Update this contract to Solidity 0.5.0 */\ncontract COO is ERC721Full, Ownable {\n    constructor() public ERC721Full(\n        \"Certificate Of Ownership\",\n        \"COO\"\n    ) {\n    }\n\n    /**\n     * Our certificates are defined with the following structure\n     */\n    struct Certificate {\n        uint256 assetId;\n        string name;\n        string label;\n        uint256 price;\n        uint256 timestamp;\n        string factomEntryHash;\n        string anotherEncryptionKey;\n    }\n\n    /**\n     * We store all our certificates here\n     */\n    Certificate[] private certificates;\n\n    /**\n     * Certificates data are stored here\n     */\n    mapping (uint256 => string[]) private certificatesData;\n\n    /**\n     * @dev Creates a new certificate and links it to the sender\n     * @param newCertificate The new certificate to create\n     */\n    function createCertificate(\n        Certificate newCertificate\n    ) public {\n        uint256 certificateId = certificates.push(\n            Certificate({\n                assetId: newCertificate.assetId,\n                name: newCertificate.name,\n                label: newCertificate.label,\n                price: newCertificate.price,\n                timestamp: newCertificate.timestamp,\n                factomEntryHash: newCertificate.factomEntryHash,\n                anotherEncryptionKey: newCertificate.anotherEncryptionKey\n            })\n        ) - 1;\n\n        _mint(msg.sender, certificateId);\n    }\n\n    /**\n     * @dev Updates the information of a certificate. Can only be called by the certificate owner.\n     * @param certificateId The id of the certificate to update\n     * @param name The new name of the asset\n     * @param label The new label of the asset\n     * @param price The new price of the asset\n     * @param factomEntryHash The new factom entry hash of the asset\n     * @param anotherEncryptionKey Another new encryption key\n     */\n    function updateCertificate(\n        uint256 certificateId,\n        string name,\n        string label,\n        uint256 price,\n        string factomEntryHash,\n        string anotherEncryptionKey\n    ) public {\n        require(ownerOf(certificateId) == msg.sender, \"Certificates can only be updated by their owners\");\n\n        certificates[certificateId].name = name;\n        certificates[certificateId].label = label;\n        certificates[certificateId].price = price;\n        certificates[certificateId].factomEntryHash = factomEntryHash;\n        certificates[certificateId].anotherEncryptionKey = anotherEncryptionKey;\n    }\n\n    /**\n     * @dev Gets a certificate and the related information. Can only be called by the certificate owner.\n     * @param certificateId The id of a certificate\n     * @return The required certificate\n     */\n    function getCertificate(\n        uint256 certificateId\n    ) public view returns (\n        Certificate\n    ) {\n        require(ownerOf(certificateId) == msg.sender, \"Certificates can only be read by their owners\");\n\n        return certificates[certificateId];\n    }\n\n    /**\n     * @dev Gets the data related to a certificate. Can only be called by the certificate owner.\n     * @param certificateId The id of a certificate\n     * @return An array of data hashes\n     */\n    function getCertificateData(\n        uint256 certificateId\n    ) public view returns (\n        string[]\n    ) {\n        require(ownerOf(certificateId) == msg.sender, \"Certificates can only be updated by their owners\");\n\n        return certificatesData[certificateId];\n    }\n\n    /**\n     * @dev Updates the data of a certificate. Can only be called by the certificate owner.\n     * @param data The new data (as an array of hashes)\n     */\n    function updateCertificateData(\n        uint256 certificateId,\n        string[] data\n    ) public {\n        require(ownerOf(certificateId) == msg.sender, \"Certificates can only be updated by their owners\");\n\n        certificatesData[certificateId] = data;\n    }\n}\n",
  "sourcePath": "/Users/clement/Documents/Dev/herc/COO/COO/contracts/COO.sol",
  "ast": {
    "absolutePath": "/Users/clement/Documents/Dev/herc/COO/COO/contracts/COO.sol",
    "exportedSymbols": {
      "COO": [
        207
      ]
    },
    "id": 208,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.4",
          ".25"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:0"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 208,
        "sourceUnit": 1415,
        "src": "59:69:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 208,
        "sourceUnit": 563,
        "src": "129:63:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5,
              "name": "ERC721Full",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1414,
              "src": "305:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Full_$1414",
                "typeString": "contract ERC721Full"
              }
            },
            "id": 6,
            "nodeType": "InheritanceSpecifier",
            "src": "305:10:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 562,
              "src": "317:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$562",
                "typeString": "contract Ownable"
              }
            },
            "id": 8,
            "nodeType": "InheritanceSpecifier",
            "src": "317:7:0"
          }
        ],
        "contractDependencies": [
          315,
          325,
          562,
          1107,
          1390,
          1414,
          1541,
          1644,
          1671,
          1694
        ],
        "contractKind": "contract",
        "documentation": "@title Certificate of Ownership",
        "fullyImplemented": true,
        "id": 207,
        "linearizedBaseContracts": [
          207,
          562,
          1414,
          1541,
          1694,
          1390,
          1671,
          1107,
          1644,
          315,
          325
        ],
        "name": "COO",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 15,
              "nodeType": "Block",
              "src": "420:7:0",
              "statements": []
            },
            "documentation": null,
            "id": 16,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "4365727469666963617465204f66204f776e657273686970",
                    "id": 11,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "372:26:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_98f9320511f7cc2e0b276d350f9dff5e5452bfef258685bc08921ecebf7e4b77",
                      "typeString": "literal_string \"Certificate Of Ownership\""
                    },
                    "value": "Certificate Of Ownership"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "434f4f",
                    "id": 12,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "408:5:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_efa080c67ecf4a6bf40c9dc64173420c08f359250ca6562d7c80f7c7b9b13969",
                      "typeString": "literal_string \"COO\""
                    },
                    "value": "COO"
                  }
                ],
                "id": 13,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 10,
                  "name": "ERC721Full",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1414,
                  "src": "352:10:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Full_$1414_$",
                    "typeString": "type(contract ERC721Full)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "352:67:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "342:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 14,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "420:0:0"
            },
            "scope": 207,
            "src": "331:96:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "canonicalName": "COO.Certificate",
            "id": 31,
            "members": [
              {
                "constant": false,
                "id": 18,
                "name": "assetId",
                "nodeType": "VariableDeclaration",
                "scope": 31,
                "src": "543:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 17,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "543:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 20,
                "name": "name",
                "nodeType": "VariableDeclaration",
                "scope": 31,
                "src": "568:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 19,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "568:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 22,
                "name": "label",
                "nodeType": "VariableDeclaration",
                "scope": 31,
                "src": "589:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 21,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "589:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 24,
                "name": "price",
                "nodeType": "VariableDeclaration",
                "scope": 31,
                "src": "611:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 23,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "611:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 26,
                "name": "timestamp",
                "nodeType": "VariableDeclaration",
                "scope": 31,
                "src": "634:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 25,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "634:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 28,
                "name": "factomEntryHash",
                "nodeType": "VariableDeclaration",
                "scope": 31,
                "src": "661:22:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 27,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "661:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 30,
                "name": "anotherEncryptionKey",
                "nodeType": "VariableDeclaration",
                "scope": 31,
                "src": "693:27:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 29,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "693:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Certificate",
            "nodeType": "StructDefinition",
            "scope": 207,
            "src": "514:213:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 34,
            "name": "certificates",
            "nodeType": "VariableDeclaration",
            "scope": 207,
            "src": "791:34:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Certificate_$31_storage_$dyn_storage",
              "typeString": "struct COO.Certificate[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 32,
                "name": "Certificate",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 31,
                "src": "791:11:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Certificate_$31_storage_ptr",
                  "typeString": "struct COO.Certificate"
                }
              },
              "id": 33,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "791:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Certificate_$31_storage_$dyn_storage_ptr",
                "typeString": "struct COO.Certificate[]"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 39,
            "name": "certificatesData",
            "nodeType": "VariableDeclaration",
            "scope": 207,
            "src": "889:54:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_string_storage_$dyn_storage_$",
              "typeString": "mapping(uint256 => string[])"
            },
            "typeName": {
              "id": 38,
              "keyType": {
                "id": 35,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "898:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "889:29:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_string_storage_$dyn_storage_$",
                "typeString": "mapping(uint256 => string[])"
              },
              "valueType": {
                "baseType": {
                  "id": 36,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "909:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "id": 37,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "909:8:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                  "typeString": "string[]"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 74,
              "nodeType": "Block",
              "src": "1166:531:0",
              "statements": [
                {
                  "assignments": [
                    45
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45,
                      "name": "certificateId",
                      "nodeType": "VariableDeclaration",
                      "scope": 75,
                      "src": "1176:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 44,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1176:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 67,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 66,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 49,
                                "name": "newCertificate",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41,
                                "src": "1270:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Certificate_$31_memory_ptr",
                                  "typeString": "struct COO.Certificate memory"
                                }
                              },
                              "id": 50,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "assetId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 18,
                              "src": "1270:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 51,
                                "name": "newCertificate",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41,
                                "src": "1316:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Certificate_$31_memory_ptr",
                                  "typeString": "struct COO.Certificate memory"
                                }
                              },
                              "id": 52,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "name",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 20,
                              "src": "1316:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 53,
                                "name": "newCertificate",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41,
                                "src": "1360:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Certificate_$31_memory_ptr",
                                  "typeString": "struct COO.Certificate memory"
                                }
                              },
                              "id": 54,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "label",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 22,
                              "src": "1360:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 55,
                                "name": "newCertificate",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41,
                                "src": "1405:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Certificate_$31_memory_ptr",
                                  "typeString": "struct COO.Certificate memory"
                                }
                              },
                              "id": 56,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "price",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 24,
                              "src": "1405:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 57,
                                "name": "newCertificate",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41,
                                "src": "1454:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Certificate_$31_memory_ptr",
                                  "typeString": "struct COO.Certificate memory"
                                }
                              },
                              "id": 58,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 26,
                              "src": "1454:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 59,
                                "name": "newCertificate",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41,
                                "src": "1513:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Certificate_$31_memory_ptr",
                                  "typeString": "struct COO.Certificate memory"
                                }
                              },
                              "id": 60,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "factomEntryHash",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 28,
                              "src": "1513:30:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 61,
                                "name": "newCertificate",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41,
                                "src": "1583:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Certificate_$31_memory_ptr",
                                  "typeString": "struct COO.Certificate memory"
                                }
                              },
                              "id": 62,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "anotherEncryptionKey",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 30,
                              "src": "1583:35:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 48,
                            "name": "Certificate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31,
                            "src": "1231:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_Certificate_$31_storage_ptr_$",
                              "typeString": "type(struct COO.Certificate storage pointer)"
                            }
                          },
                          "id": 63,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [
                            "assetId",
                            "name",
                            "label",
                            "price",
                            "timestamp",
                            "factomEntryHash",
                            "anotherEncryptionKey"
                          ],
                          "nodeType": "FunctionCall",
                          "src": "1231:402:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Certificate_$31_memory",
                            "typeString": "struct COO.Certificate memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Certificate_$31_memory",
                            "typeString": "struct COO.Certificate memory"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 46,
                          "name": "certificates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34,
                          "src": "1200:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Certificate_$31_storage_$dyn_storage",
                            "typeString": "struct COO.Certificate storage ref[] storage ref"
                          }
                        },
                        "id": 47,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "push",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1200:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Certificate_$31_storage_$returns$_t_uint256_$",
                          "typeString": "function (struct COO.Certificate storage ref) returns (uint256)"
                        }
                      },
                      "id": 64,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1200:443:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 65,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1646:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1200:447:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1176:471:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 69,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1744,
                          "src": "1664:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 70,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1664:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 71,
                        "name": "certificateId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "1676:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 68,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1325
                      ],
                      "referencedDeclaration": 1325,
                      "src": "1658:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 72,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1658:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73,
                  "nodeType": "ExpressionStatement",
                  "src": "1658:32:0"
                }
              ]
            },
            "documentation": "@dev Creates a new certificate and links it to the sender\n@param newCertificate The new certificate to create",
            "id": 75,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "createCertificate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 42,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41,
                  "name": "newCertificate",
                  "nodeType": "VariableDeclaration",
                  "scope": 75,
                  "src": "1126:26:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Certificate_$31_memory_ptr",
                    "typeString": "struct COO.Certificate"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 40,
                    "name": "Certificate",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 31,
                    "src": "1126:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Certificate_$31_storage_ptr",
                      "typeString": "struct COO.Certificate"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1116:42:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 43,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1166:0:0"
            },
            "scope": 207,
            "src": "1090:607:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 135,
              "nodeType": "Block",
              "src": "2358:418:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 96,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 92,
                              "name": "certificateId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 77,
                              "src": "2384:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 91,
                            "name": "ownerOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              655
                            ],
                            "referencedDeclaration": 655,
                            "src": "2376:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 93,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2376:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 94,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1744,
                            "src": "2402:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 95,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2402:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2376:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4365727469666963617465732063616e206f6e6c792062652075706461746564206279207468656972206f776e657273",
                        "id": 97,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2414:50:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b1a5bc1b45d8794b7d7759692dd12d30903956781d81ca0e3501f508f2b2a5fc",
                          "typeString": "literal_string \"Certificates can only be updated by their owners\""
                        },
                        "value": "Certificates can only be updated by their owners"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b1a5bc1b45d8794b7d7759692dd12d30903956781d81ca0e3501f508f2b2a5fc",
                          "typeString": "literal_string \"Certificates can only be updated by their owners\""
                        }
                      ],
                      "id": 90,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1747,
                        1748
                      ],
                      "referencedDeclaration": 1748,
                      "src": "2368:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 98,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2368:97:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99,
                  "nodeType": "ExpressionStatement",
                  "src": "2368:97:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 100,
                          "name": "certificates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34,
                          "src": "2476:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Certificate_$31_storage_$dyn_storage",
                            "typeString": "struct COO.Certificate storage ref[] storage ref"
                          }
                        },
                        "id": 102,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 101,
                          "name": "certificateId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77,
                          "src": "2489:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2476:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Certificate_$31_storage",
                          "typeString": "struct COO.Certificate storage ref"
                        }
                      },
                      "id": 103,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20,
                      "src": "2476:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 104,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79,
                      "src": "2511:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2476:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 106,
                  "nodeType": "ExpressionStatement",
                  "src": "2476:39:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 107,
                          "name": "certificates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34,
                          "src": "2525:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Certificate_$31_storage_$dyn_storage",
                            "typeString": "struct COO.Certificate storage ref[] storage ref"
                          }
                        },
                        "id": 109,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 108,
                          "name": "certificateId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77,
                          "src": "2538:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2525:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Certificate_$31_storage",
                          "typeString": "struct COO.Certificate storage ref"
                        }
                      },
                      "id": 110,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22,
                      "src": "2525:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 111,
                      "name": "label",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81,
                      "src": "2561:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2525:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 113,
                  "nodeType": "ExpressionStatement",
                  "src": "2525:41:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 114,
                          "name": "certificates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34,
                          "src": "2576:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Certificate_$31_storage_$dyn_storage",
                            "typeString": "struct COO.Certificate storage ref[] storage ref"
                          }
                        },
                        "id": 116,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 115,
                          "name": "certificateId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77,
                          "src": "2589:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2576:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Certificate_$31_storage",
                          "typeString": "struct COO.Certificate storage ref"
                        }
                      },
                      "id": 117,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24,
                      "src": "2576:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 118,
                      "name": "price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83,
                      "src": "2612:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2576:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 120,
                  "nodeType": "ExpressionStatement",
                  "src": "2576:41:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 121,
                          "name": "certificates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34,
                          "src": "2627:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Certificate_$31_storage_$dyn_storage",
                            "typeString": "struct COO.Certificate storage ref[] storage ref"
                          }
                        },
                        "id": 123,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 122,
                          "name": "certificateId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77,
                          "src": "2640:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2627:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Certificate_$31_storage",
                          "typeString": "struct COO.Certificate storage ref"
                        }
                      },
                      "id": 124,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "factomEntryHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28,
                      "src": "2627:43:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 125,
                      "name": "factomEntryHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85,
                      "src": "2673:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2627:61:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 127,
                  "nodeType": "ExpressionStatement",
                  "src": "2627:61:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 128,
                          "name": "certificates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34,
                          "src": "2698:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Certificate_$31_storage_$dyn_storage",
                            "typeString": "struct COO.Certificate storage ref[] storage ref"
                          }
                        },
                        "id": 130,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 129,
                          "name": "certificateId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77,
                          "src": "2711:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2698:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Certificate_$31_storage",
                          "typeString": "struct COO.Certificate storage ref"
                        }
                      },
                      "id": 131,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "anotherEncryptionKey",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30,
                      "src": "2698:48:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 132,
                      "name": "anotherEncryptionKey",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87,
                      "src": "2749:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2698:71:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 134,
                  "nodeType": "ExpressionStatement",
                  "src": "2698:71:0"
                }
              ]
            },
            "documentation": "@dev Updates the information of a certificate. Can only be called by the certificate owner.\n@param certificateId The id of the certificate to update\n@param name The new name of the asset\n@param label The new label of the asset\n@param price The new price of the asset\n@param factomEntryHash The new factom entry hash of the asset\n@param anotherEncryptionKey Another new encryption key",
            "id": 136,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "updateCertificate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 88,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77,
                  "name": "certificateId",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "2188:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 76,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2188:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "2219:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 78,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2219:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 81,
                  "name": "label",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "2240:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 80,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2240:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 83,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "2262:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 82,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2262:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85,
                  "name": "factomEntryHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "2285:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 84,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2285:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87,
                  "name": "anotherEncryptionKey",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "2317:27:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 86,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2317:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2178:172:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 89,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2358:0:0"
            },
            "scope": 207,
            "src": "2152:624:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 157,
              "nodeType": "Block",
              "src": "3104:156:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 145,
                              "name": "certificateId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 138,
                              "src": "3130:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 144,
                            "name": "ownerOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              655
                            ],
                            "referencedDeclaration": 655,
                            "src": "3122:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3122:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 147,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1744,
                            "src": "3148:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3148:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3122:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4365727469666963617465732063616e206f6e6c792062652072656164206279207468656972206f776e657273",
                        "id": 150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3160:47:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c28c502d3c54ef9811d2ff5d07ae42bc28c25b45279ed8798bf0f85bc17132d0",
                          "typeString": "literal_string \"Certificates can only be read by their owners\""
                        },
                        "value": "Certificates can only be read by their owners"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c28c502d3c54ef9811d2ff5d07ae42bc28c25b45279ed8798bf0f85bc17132d0",
                          "typeString": "literal_string \"Certificates can only be read by their owners\""
                        }
                      ],
                      "id": 143,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1747,
                        1748
                      ],
                      "referencedDeclaration": 1748,
                      "src": "3114:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3114:94:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 152,
                  "nodeType": "ExpressionStatement",
                  "src": "3114:94:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 153,
                      "name": "certificates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34,
                      "src": "3226:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Certificate_$31_storage_$dyn_storage",
                        "typeString": "struct COO.Certificate storage ref[] storage ref"
                      }
                    },
                    "id": 155,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 154,
                      "name": "certificateId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 138,
                      "src": "3239:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3226:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Certificate_$31_storage",
                      "typeString": "struct COO.Certificate storage ref"
                    }
                  },
                  "functionReturnParameters": 142,
                  "id": 156,
                  "nodeType": "Return",
                  "src": "3219:34:0"
                }
              ]
            },
            "documentation": "@dev Gets a certificate and the related information. Can only be called by the certificate owner.\n@param certificateId The id of a certificate\n@return The required certificate",
            "id": 158,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getCertificate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 138,
                  "name": "certificateId",
                  "nodeType": "VariableDeclaration",
                  "scope": 158,
                  "src": "3028:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 137,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3028:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3018:37:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 142,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 141,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 158,
                  "src": "3086:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Certificate_$31_memory_ptr",
                    "typeString": "struct COO.Certificate"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 140,
                    "name": "Certificate",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 31,
                    "src": "3086:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Certificate_$31_storage_ptr",
                      "typeString": "struct COO.Certificate"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3076:27:0"
            },
            "scope": 207,
            "src": "2995:265:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 180,
              "nodeType": "Block",
              "src": "3580:163:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 168,
                              "name": "certificateId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 160,
                              "src": "3606:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 167,
                            "name": "ownerOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              655
                            ],
                            "referencedDeclaration": 655,
                            "src": "3598:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 169,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3598:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 170,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1744,
                            "src": "3624:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3624:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3598:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4365727469666963617465732063616e206f6e6c792062652075706461746564206279207468656972206f776e657273",
                        "id": 173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3636:50:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b1a5bc1b45d8794b7d7759692dd12d30903956781d81ca0e3501f508f2b2a5fc",
                          "typeString": "literal_string \"Certificates can only be updated by their owners\""
                        },
                        "value": "Certificates can only be updated by their owners"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b1a5bc1b45d8794b7d7759692dd12d30903956781d81ca0e3501f508f2b2a5fc",
                          "typeString": "literal_string \"Certificates can only be updated by their owners\""
                        }
                      ],
                      "id": 166,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1747,
                        1748
                      ],
                      "referencedDeclaration": 1748,
                      "src": "3590:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3590:97:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 175,
                  "nodeType": "ExpressionStatement",
                  "src": "3590:97:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 176,
                      "name": "certificatesData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39,
                      "src": "3705:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_string_storage_$dyn_storage_$",
                        "typeString": "mapping(uint256 => string storage ref[] storage ref)"
                      }
                    },
                    "id": 178,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 177,
                      "name": "certificateId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 160,
                      "src": "3722:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3705:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                      "typeString": "string storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 165,
                  "id": 179,
                  "nodeType": "Return",
                  "src": "3698:38:0"
                }
              ]
            },
            "documentation": "@dev Gets the data related to a certificate. Can only be called by the certificate owner.\n@param certificateId The id of a certificate\n@return An array of data hashes",
            "id": 181,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getCertificateData",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 161,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 160,
                  "name": "certificateId",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "3507:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 159,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3507:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3497:37:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 165,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 164,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "3565:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 162,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "3565:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 163,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3565:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3555:24:0"
            },
            "scope": 207,
            "src": "3470:273:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 205,
              "nodeType": "Block",
              "src": "4011:163:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 191,
                              "name": "certificateId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 183,
                              "src": "4037:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 190,
                            "name": "ownerOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              655
                            ],
                            "referencedDeclaration": 655,
                            "src": "4029:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 192,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4029:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 193,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1744,
                            "src": "4055:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 194,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4055:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4029:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4365727469666963617465732063616e206f6e6c792062652075706461746564206279207468656972206f776e657273",
                        "id": 196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4067:50:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b1a5bc1b45d8794b7d7759692dd12d30903956781d81ca0e3501f508f2b2a5fc",
                          "typeString": "literal_string \"Certificates can only be updated by their owners\""
                        },
                        "value": "Certificates can only be updated by their owners"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b1a5bc1b45d8794b7d7759692dd12d30903956781d81ca0e3501f508f2b2a5fc",
                          "typeString": "literal_string \"Certificates can only be updated by their owners\""
                        }
                      ],
                      "id": 189,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1747,
                        1748
                      ],
                      "referencedDeclaration": 1748,
                      "src": "4021:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4021:97:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 198,
                  "nodeType": "ExpressionStatement",
                  "src": "4021:97:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 199,
                        "name": "certificatesData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39,
                        "src": "4129:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_string_storage_$dyn_storage_$",
                          "typeString": "mapping(uint256 => string storage ref[] storage ref)"
                        }
                      },
                      "id": 201,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 200,
                        "name": "certificateId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 183,
                        "src": "4146:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4129:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                        "typeString": "string storage ref[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 202,
                      "name": "data",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 186,
                      "src": "4163:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_memory_$dyn_memory_ptr",
                        "typeString": "string memory[] memory"
                      }
                    },
                    "src": "4129:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                      "typeString": "string storage ref[] storage ref"
                    }
                  },
                  "id": 204,
                  "nodeType": "ExpressionStatement",
                  "src": "4129:38:0"
                }
              ]
            },
            "documentation": "@dev Updates the data of a certificate. Can only be called by the certificate owner.\n@param data The new data (as an array of hashes)",
            "id": 206,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "updateCertificateData",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 187,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 183,
                  "name": "certificateId",
                  "nodeType": "VariableDeclaration",
                  "scope": 206,
                  "src": "3953:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 182,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3953:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 186,
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 206,
                  "src": "3984:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 184,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "3984:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 185,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3984:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3943:60:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 188,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4011:0:0"
            },
            "scope": 207,
            "src": "3913:261:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 208,
        "src": "289:3887:0"
      }
    ],
    "src": "0:4177:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/clement/Documents/Dev/herc/COO/COO/contracts/COO.sol",
    "exportedSymbols": {
      "COO": [
        207
      ]
    },
    "id": 208,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.4",
          ".25"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:0"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 208,
        "sourceUnit": 1415,
        "src": "59:69:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 208,
        "sourceUnit": 563,
        "src": "129:63:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5,
              "name": "ERC721Full",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1414,
              "src": "305:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Full_$1414",
                "typeString": "contract ERC721Full"
              }
            },
            "id": 6,
            "nodeType": "InheritanceSpecifier",
            "src": "305:10:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 562,
              "src": "317:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$562",
                "typeString": "contract Ownable"
              }
            },
            "id": 8,
            "nodeType": "InheritanceSpecifier",
            "src": "317:7:0"
          }
        ],
        "contractDependencies": [
          315,
          325,
          562,
          1107,
          1390,
          1414,
          1541,
          1644,
          1671,
          1694
        ],
        "contractKind": "contract",
        "documentation": "@title Certificate of Ownership",
        "fullyImplemented": true,
        "id": 207,
        "linearizedBaseContracts": [
          207,
          562,
          1414,
          1541,
          1694,
          1390,
          1671,
          1107,
          1644,
          315,
          325
        ],
        "name": "COO",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 15,
              "nodeType": "Block",
              "src": "420:7:0",
              "statements": []
            },
            "documentation": null,
            "id": 16,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "4365727469666963617465204f66204f776e657273686970",
                    "id": 11,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "372:26:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_98f9320511f7cc2e0b276d350f9dff5e5452bfef258685bc08921ecebf7e4b77",
                      "typeString": "literal_string \"Certificate Of Ownership\""
                    },
                    "value": "Certificate Of Ownership"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "434f4f",
                    "id": 12,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "408:5:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_efa080c67ecf4a6bf40c9dc64173420c08f359250ca6562d7c80f7c7b9b13969",
                      "typeString": "literal_string \"COO\""
                    },
                    "value": "COO"
                  }
                ],
                "id": 13,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 10,
                  "name": "ERC721Full",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1414,
                  "src": "352:10:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Full_$1414_$",
                    "typeString": "type(contract ERC721Full)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "352:67:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "342:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 14,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "420:0:0"
            },
            "scope": 207,
            "src": "331:96:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "canonicalName": "COO.Certificate",
            "id": 31,
            "members": [
              {
                "constant": false,
                "id": 18,
                "name": "assetId",
                "nodeType": "VariableDeclaration",
                "scope": 31,
                "src": "543:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 17,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "543:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 20,
                "name": "name",
                "nodeType": "VariableDeclaration",
                "scope": 31,
                "src": "568:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 19,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "568:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 22,
                "name": "label",
                "nodeType": "VariableDeclaration",
                "scope": 31,
                "src": "589:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 21,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "589:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 24,
                "name": "price",
                "nodeType": "VariableDeclaration",
                "scope": 31,
                "src": "611:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 23,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "611:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 26,
                "name": "timestamp",
                "nodeType": "VariableDeclaration",
                "scope": 31,
                "src": "634:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 25,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "634:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 28,
                "name": "factomEntryHash",
                "nodeType": "VariableDeclaration",
                "scope": 31,
                "src": "661:22:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 27,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "661:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 30,
                "name": "anotherEncryptionKey",
                "nodeType": "VariableDeclaration",
                "scope": 31,
                "src": "693:27:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 29,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "693:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Certificate",
            "nodeType": "StructDefinition",
            "scope": 207,
            "src": "514:213:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 34,
            "name": "certificates",
            "nodeType": "VariableDeclaration",
            "scope": 207,
            "src": "791:34:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Certificate_$31_storage_$dyn_storage",
              "typeString": "struct COO.Certificate[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 32,
                "name": "Certificate",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 31,
                "src": "791:11:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Certificate_$31_storage_ptr",
                  "typeString": "struct COO.Certificate"
                }
              },
              "id": 33,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "791:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Certificate_$31_storage_$dyn_storage_ptr",
                "typeString": "struct COO.Certificate[]"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 39,
            "name": "certificatesData",
            "nodeType": "VariableDeclaration",
            "scope": 207,
            "src": "889:54:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_string_storage_$dyn_storage_$",
              "typeString": "mapping(uint256 => string[])"
            },
            "typeName": {
              "id": 38,
              "keyType": {
                "id": 35,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "898:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "889:29:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_string_storage_$dyn_storage_$",
                "typeString": "mapping(uint256 => string[])"
              },
              "valueType": {
                "baseType": {
                  "id": 36,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "909:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "id": 37,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "909:8:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                  "typeString": "string[]"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 74,
              "nodeType": "Block",
              "src": "1166:531:0",
              "statements": [
                {
                  "assignments": [
                    45
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45,
                      "name": "certificateId",
                      "nodeType": "VariableDeclaration",
                      "scope": 75,
                      "src": "1176:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 44,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1176:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 67,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 66,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 49,
                                "name": "newCertificate",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41,
                                "src": "1270:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Certificate_$31_memory_ptr",
                                  "typeString": "struct COO.Certificate memory"
                                }
                              },
                              "id": 50,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "assetId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 18,
                              "src": "1270:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 51,
                                "name": "newCertificate",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41,
                                "src": "1316:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Certificate_$31_memory_ptr",
                                  "typeString": "struct COO.Certificate memory"
                                }
                              },
                              "id": 52,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "name",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 20,
                              "src": "1316:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 53,
                                "name": "newCertificate",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41,
                                "src": "1360:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Certificate_$31_memory_ptr",
                                  "typeString": "struct COO.Certificate memory"
                                }
                              },
                              "id": 54,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "label",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 22,
                              "src": "1360:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 55,
                                "name": "newCertificate",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41,
                                "src": "1405:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Certificate_$31_memory_ptr",
                                  "typeString": "struct COO.Certificate memory"
                                }
                              },
                              "id": 56,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "price",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 24,
                              "src": "1405:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 57,
                                "name": "newCertificate",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41,
                                "src": "1454:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Certificate_$31_memory_ptr",
                                  "typeString": "struct COO.Certificate memory"
                                }
                              },
                              "id": 58,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 26,
                              "src": "1454:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 59,
                                "name": "newCertificate",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41,
                                "src": "1513:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Certificate_$31_memory_ptr",
                                  "typeString": "struct COO.Certificate memory"
                                }
                              },
                              "id": 60,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "factomEntryHash",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 28,
                              "src": "1513:30:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 61,
                                "name": "newCertificate",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41,
                                "src": "1583:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Certificate_$31_memory_ptr",
                                  "typeString": "struct COO.Certificate memory"
                                }
                              },
                              "id": 62,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "anotherEncryptionKey",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 30,
                              "src": "1583:35:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 48,
                            "name": "Certificate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31,
                            "src": "1231:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_Certificate_$31_storage_ptr_$",
                              "typeString": "type(struct COO.Certificate storage pointer)"
                            }
                          },
                          "id": 63,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [
                            "assetId",
                            "name",
                            "label",
                            "price",
                            "timestamp",
                            "factomEntryHash",
                            "anotherEncryptionKey"
                          ],
                          "nodeType": "FunctionCall",
                          "src": "1231:402:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Certificate_$31_memory",
                            "typeString": "struct COO.Certificate memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Certificate_$31_memory",
                            "typeString": "struct COO.Certificate memory"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 46,
                          "name": "certificates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34,
                          "src": "1200:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Certificate_$31_storage_$dyn_storage",
                            "typeString": "struct COO.Certificate storage ref[] storage ref"
                          }
                        },
                        "id": 47,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "push",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1200:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Certificate_$31_storage_$returns$_t_uint256_$",
                          "typeString": "function (struct COO.Certificate storage ref) returns (uint256)"
                        }
                      },
                      "id": 64,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1200:443:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 65,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1646:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1200:447:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1176:471:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 69,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1744,
                          "src": "1664:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 70,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1664:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 71,
                        "name": "certificateId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "1676:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 68,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1325
                      ],
                      "referencedDeclaration": 1325,
                      "src": "1658:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 72,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1658:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73,
                  "nodeType": "ExpressionStatement",
                  "src": "1658:32:0"
                }
              ]
            },
            "documentation": "@dev Creates a new certificate and links it to the sender\n@param newCertificate The new certificate to create",
            "id": 75,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "createCertificate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 42,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41,
                  "name": "newCertificate",
                  "nodeType": "VariableDeclaration",
                  "scope": 75,
                  "src": "1126:26:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Certificate_$31_memory_ptr",
                    "typeString": "struct COO.Certificate"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 40,
                    "name": "Certificate",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 31,
                    "src": "1126:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Certificate_$31_storage_ptr",
                      "typeString": "struct COO.Certificate"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1116:42:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 43,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1166:0:0"
            },
            "scope": 207,
            "src": "1090:607:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 135,
              "nodeType": "Block",
              "src": "2358:418:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 96,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 92,
                              "name": "certificateId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 77,
                              "src": "2384:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 91,
                            "name": "ownerOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              655
                            ],
                            "referencedDeclaration": 655,
                            "src": "2376:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 93,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2376:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 94,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1744,
                            "src": "2402:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 95,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2402:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2376:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4365727469666963617465732063616e206f6e6c792062652075706461746564206279207468656972206f776e657273",
                        "id": 97,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2414:50:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b1a5bc1b45d8794b7d7759692dd12d30903956781d81ca0e3501f508f2b2a5fc",
                          "typeString": "literal_string \"Certificates can only be updated by their owners\""
                        },
                        "value": "Certificates can only be updated by their owners"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b1a5bc1b45d8794b7d7759692dd12d30903956781d81ca0e3501f508f2b2a5fc",
                          "typeString": "literal_string \"Certificates can only be updated by their owners\""
                        }
                      ],
                      "id": 90,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1747,
                        1748
                      ],
                      "referencedDeclaration": 1748,
                      "src": "2368:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 98,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2368:97:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99,
                  "nodeType": "ExpressionStatement",
                  "src": "2368:97:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 100,
                          "name": "certificates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34,
                          "src": "2476:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Certificate_$31_storage_$dyn_storage",
                            "typeString": "struct COO.Certificate storage ref[] storage ref"
                          }
                        },
                        "id": 102,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 101,
                          "name": "certificateId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77,
                          "src": "2489:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2476:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Certificate_$31_storage",
                          "typeString": "struct COO.Certificate storage ref"
                        }
                      },
                      "id": 103,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20,
                      "src": "2476:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 104,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79,
                      "src": "2511:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2476:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 106,
                  "nodeType": "ExpressionStatement",
                  "src": "2476:39:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 107,
                          "name": "certificates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34,
                          "src": "2525:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Certificate_$31_storage_$dyn_storage",
                            "typeString": "struct COO.Certificate storage ref[] storage ref"
                          }
                        },
                        "id": 109,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 108,
                          "name": "certificateId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77,
                          "src": "2538:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2525:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Certificate_$31_storage",
                          "typeString": "struct COO.Certificate storage ref"
                        }
                      },
                      "id": 110,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22,
                      "src": "2525:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 111,
                      "name": "label",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81,
                      "src": "2561:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2525:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 113,
                  "nodeType": "ExpressionStatement",
                  "src": "2525:41:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 114,
                          "name": "certificates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34,
                          "src": "2576:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Certificate_$31_storage_$dyn_storage",
                            "typeString": "struct COO.Certificate storage ref[] storage ref"
                          }
                        },
                        "id": 116,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 115,
                          "name": "certificateId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77,
                          "src": "2589:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2576:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Certificate_$31_storage",
                          "typeString": "struct COO.Certificate storage ref"
                        }
                      },
                      "id": 117,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24,
                      "src": "2576:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 118,
                      "name": "price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83,
                      "src": "2612:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2576:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 120,
                  "nodeType": "ExpressionStatement",
                  "src": "2576:41:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 121,
                          "name": "certificates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34,
                          "src": "2627:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Certificate_$31_storage_$dyn_storage",
                            "typeString": "struct COO.Certificate storage ref[] storage ref"
                          }
                        },
                        "id": 123,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 122,
                          "name": "certificateId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77,
                          "src": "2640:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2627:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Certificate_$31_storage",
                          "typeString": "struct COO.Certificate storage ref"
                        }
                      },
                      "id": 124,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "factomEntryHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28,
                      "src": "2627:43:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 125,
                      "name": "factomEntryHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85,
                      "src": "2673:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2627:61:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 127,
                  "nodeType": "ExpressionStatement",
                  "src": "2627:61:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 128,
                          "name": "certificates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34,
                          "src": "2698:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Certificate_$31_storage_$dyn_storage",
                            "typeString": "struct COO.Certificate storage ref[] storage ref"
                          }
                        },
                        "id": 130,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 129,
                          "name": "certificateId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77,
                          "src": "2711:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2698:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Certificate_$31_storage",
                          "typeString": "struct COO.Certificate storage ref"
                        }
                      },
                      "id": 131,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "anotherEncryptionKey",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30,
                      "src": "2698:48:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 132,
                      "name": "anotherEncryptionKey",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87,
                      "src": "2749:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2698:71:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 134,
                  "nodeType": "ExpressionStatement",
                  "src": "2698:71:0"
                }
              ]
            },
            "documentation": "@dev Updates the information of a certificate. Can only be called by the certificate owner.\n@param certificateId The id of the certificate to update\n@param name The new name of the asset\n@param label The new label of the asset\n@param price The new price of the asset\n@param factomEntryHash The new factom entry hash of the asset\n@param anotherEncryptionKey Another new encryption key",
            "id": 136,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "updateCertificate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 88,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77,
                  "name": "certificateId",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "2188:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 76,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2188:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "2219:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 78,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2219:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 81,
                  "name": "label",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "2240:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 80,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2240:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 83,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "2262:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 82,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2262:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85,
                  "name": "factomEntryHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "2285:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 84,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2285:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87,
                  "name": "anotherEncryptionKey",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "2317:27:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 86,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2317:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2178:172:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 89,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2358:0:0"
            },
            "scope": 207,
            "src": "2152:624:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 157,
              "nodeType": "Block",
              "src": "3104:156:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 145,
                              "name": "certificateId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 138,
                              "src": "3130:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 144,
                            "name": "ownerOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              655
                            ],
                            "referencedDeclaration": 655,
                            "src": "3122:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3122:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 147,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1744,
                            "src": "3148:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3148:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3122:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4365727469666963617465732063616e206f6e6c792062652072656164206279207468656972206f776e657273",
                        "id": 150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3160:47:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c28c502d3c54ef9811d2ff5d07ae42bc28c25b45279ed8798bf0f85bc17132d0",
                          "typeString": "literal_string \"Certificates can only be read by their owners\""
                        },
                        "value": "Certificates can only be read by their owners"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c28c502d3c54ef9811d2ff5d07ae42bc28c25b45279ed8798bf0f85bc17132d0",
                          "typeString": "literal_string \"Certificates can only be read by their owners\""
                        }
                      ],
                      "id": 143,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1747,
                        1748
                      ],
                      "referencedDeclaration": 1748,
                      "src": "3114:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3114:94:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 152,
                  "nodeType": "ExpressionStatement",
                  "src": "3114:94:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 153,
                      "name": "certificates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34,
                      "src": "3226:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Certificate_$31_storage_$dyn_storage",
                        "typeString": "struct COO.Certificate storage ref[] storage ref"
                      }
                    },
                    "id": 155,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 154,
                      "name": "certificateId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 138,
                      "src": "3239:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3226:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Certificate_$31_storage",
                      "typeString": "struct COO.Certificate storage ref"
                    }
                  },
                  "functionReturnParameters": 142,
                  "id": 156,
                  "nodeType": "Return",
                  "src": "3219:34:0"
                }
              ]
            },
            "documentation": "@dev Gets a certificate and the related information. Can only be called by the certificate owner.\n@param certificateId The id of a certificate\n@return The required certificate",
            "id": 158,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getCertificate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 138,
                  "name": "certificateId",
                  "nodeType": "VariableDeclaration",
                  "scope": 158,
                  "src": "3028:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 137,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3028:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3018:37:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 142,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 141,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 158,
                  "src": "3086:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Certificate_$31_memory_ptr",
                    "typeString": "struct COO.Certificate"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 140,
                    "name": "Certificate",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 31,
                    "src": "3086:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Certificate_$31_storage_ptr",
                      "typeString": "struct COO.Certificate"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3076:27:0"
            },
            "scope": 207,
            "src": "2995:265:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 180,
              "nodeType": "Block",
              "src": "3580:163:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 168,
                              "name": "certificateId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 160,
                              "src": "3606:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 167,
                            "name": "ownerOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              655
                            ],
                            "referencedDeclaration": 655,
                            "src": "3598:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 169,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3598:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 170,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1744,
                            "src": "3624:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3624:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3598:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4365727469666963617465732063616e206f6e6c792062652075706461746564206279207468656972206f776e657273",
                        "id": 173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3636:50:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b1a5bc1b45d8794b7d7759692dd12d30903956781d81ca0e3501f508f2b2a5fc",
                          "typeString": "literal_string \"Certificates can only be updated by their owners\""
                        },
                        "value": "Certificates can only be updated by their owners"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b1a5bc1b45d8794b7d7759692dd12d30903956781d81ca0e3501f508f2b2a5fc",
                          "typeString": "literal_string \"Certificates can only be updated by their owners\""
                        }
                      ],
                      "id": 166,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1747,
                        1748
                      ],
                      "referencedDeclaration": 1748,
                      "src": "3590:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3590:97:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 175,
                  "nodeType": "ExpressionStatement",
                  "src": "3590:97:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 176,
                      "name": "certificatesData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39,
                      "src": "3705:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_string_storage_$dyn_storage_$",
                        "typeString": "mapping(uint256 => string storage ref[] storage ref)"
                      }
                    },
                    "id": 178,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 177,
                      "name": "certificateId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 160,
                      "src": "3722:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3705:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                      "typeString": "string storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 165,
                  "id": 179,
                  "nodeType": "Return",
                  "src": "3698:38:0"
                }
              ]
            },
            "documentation": "@dev Gets the data related to a certificate. Can only be called by the certificate owner.\n@param certificateId The id of a certificate\n@return An array of data hashes",
            "id": 181,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getCertificateData",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 161,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 160,
                  "name": "certificateId",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "3507:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 159,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3507:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3497:37:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 165,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 164,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "3565:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 162,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "3565:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 163,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3565:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3555:24:0"
            },
            "scope": 207,
            "src": "3470:273:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 205,
              "nodeType": "Block",
              "src": "4011:163:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 191,
                              "name": "certificateId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 183,
                              "src": "4037:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 190,
                            "name": "ownerOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              655
                            ],
                            "referencedDeclaration": 655,
                            "src": "4029:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 192,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4029:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 193,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1744,
                            "src": "4055:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 194,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4055:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4029:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4365727469666963617465732063616e206f6e6c792062652075706461746564206279207468656972206f776e657273",
                        "id": 196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4067:50:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b1a5bc1b45d8794b7d7759692dd12d30903956781d81ca0e3501f508f2b2a5fc",
                          "typeString": "literal_string \"Certificates can only be updated by their owners\""
                        },
                        "value": "Certificates can only be updated by their owners"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b1a5bc1b45d8794b7d7759692dd12d30903956781d81ca0e3501f508f2b2a5fc",
                          "typeString": "literal_string \"Certificates can only be updated by their owners\""
                        }
                      ],
                      "id": 189,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1747,
                        1748
                      ],
                      "referencedDeclaration": 1748,
                      "src": "4021:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4021:97:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 198,
                  "nodeType": "ExpressionStatement",
                  "src": "4021:97:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 199,
                        "name": "certificatesData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39,
                        "src": "4129:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_string_storage_$dyn_storage_$",
                          "typeString": "mapping(uint256 => string storage ref[] storage ref)"
                        }
                      },
                      "id": 201,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 200,
                        "name": "certificateId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 183,
                        "src": "4146:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4129:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                        "typeString": "string storage ref[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 202,
                      "name": "data",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 186,
                      "src": "4163:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_memory_$dyn_memory_ptr",
                        "typeString": "string memory[] memory"
                      }
                    },
                    "src": "4129:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                      "typeString": "string storage ref[] storage ref"
                    }
                  },
                  "id": 204,
                  "nodeType": "ExpressionStatement",
                  "src": "4129:38:0"
                }
              ]
            },
            "documentation": "@dev Updates the data of a certificate. Can only be called by the certificate owner.\n@param data The new data (as an array of hashes)",
            "id": 206,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "updateCertificateData",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 187,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 183,
                  "name": "certificateId",
                  "nodeType": "VariableDeclaration",
                  "scope": 206,
                  "src": "3953:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 182,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3953:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 186,
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 206,
                  "src": "3984:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 184,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "3984:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 185,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3984:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3943:60:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 188,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4011:0:0"
            },
            "scope": 207,
            "src": "3913:261:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 208,
        "src": "289:3887:0"
      }
    ],
    "src": "0:4177:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.25+commit.59dbf8f1.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {},
      "links": {},
      "address": "0x14Fb1D46EDcC168c751dfa5B4ee473C52cFaB63F",
      "transactionHash": "0x0b2e6d8cf3b03cdd2aa9f7a579590c79a9c2fcda245bcf6f44fbf9ee566742d7"
    }
  },
  "schemaVersion": "3.0.0-beta.2",
  "updatedAt": "2018-12-04T17:31:18.832Z",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address",
        "params": {
          "owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "createCertificate((uint256,string,string,uint256,uint256,string,string))": {
        "details": "Creates a new certificate and links it to the sender",
        "params": {
          "newCertificate": "The new certificate to create"
        }
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "getCertificate(uint256)": {
        "details": "Gets a certificate and the related information. Can only be called by the certificate owner.",
        "params": {
          "certificateId": "The id of a certificate"
        },
        "return": "The required certificate"
      },
      "getCertificateData(uint256)": {
        "details": "Gets the data related to a certificate. Can only be called by the certificate owner.",
        "params": {
          "certificateId": "The id of a certificate"
        },
        "return": "An array of data hashes"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "name()": {
        "details": "Gets the token name",
        "return": "string representing the token name"
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "owner address currently marked as the owner of the given token ID"
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted.   * Requires the msg sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg sender to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "symbol()": {
        "details": "Gets the token symbol",
        "return": "string representing the token symbol"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "tokenURI(uint256)": {
        "details": "Returns an URI for a given token ID Throws if the token ID does not exist. May return an empty string.",
        "params": {
          "tokenId": "uint256 ID of the token to query"
        }
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract",
        "return": "uint256 representing the total amount of tokens"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address Usage of this method is discouraged, use `safeTransferFrom` whenever possible Requires the msg sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      },
      "updateCertificate(uint256,string,string,uint256,string,string)": {
        "details": "Updates the information of a certificate. Can only be called by the certificate owner.",
        "params": {
          "anotherEncryptionKey": "Another new encryption key",
          "certificateId": "The id of the certificate to update",
          "factomEntryHash": "The new factom entry hash of the asset",
          "label": "The new label of the asset",
          "name": "The new name of the asset",
          "price": "The new price of the asset"
        }
      },
      "updateCertificateData(uint256,string[])": {
        "details": "Updates the data of a certificate. Can only be called by the certificate owner.",
        "params": {
          "data": "The new data (as an array of hashes)"
        }
      }
    },
    "title": "Certificate of Ownership"
  },
  "userdoc": {
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    }
  }
}